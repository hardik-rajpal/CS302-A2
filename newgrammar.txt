program
:main_definition
|translation_unit main_definition
translation_unit
:struct_specifier
|function_definition
|translation_unit struct_specifier
|translation_unit function_definition

struct_specifier:
    STRUCT IDENTIFIER LCB declaration_list RCB EOS
function_definition:
    :type_specifier IDENTIFIER LRB RRB compound_statement
    |type_specifier IDENTIFIER LRB parameter_list RRB compound_statement
main_definition:
 INT MAIN LRB RRB compound_statement

type_specifier:
 VOID
 |INT 
 |STRUCT IDENTIFIER

declaration_list:
:declaration
|declaration_list declaration

declaration: type_specifier declarator_list EOS

declarator_list
:declarator
| declarator_list COMMA declarator

declarator
:declarator_arr
|OP_MUL declarator

declarator_arr
:IDENTIFIER
| declarator_arr LSB CONSTANT_INT RSB

parameter_list
: parameter_declaration
| parameter_list COMMA parameter_declaration

parameter_declaration
:type_specifier declarator

compound_statement
: LCB RCB
| LCB statement_list RCB
|LCB declaration_list statement_list RCB

statement_list
:statement
|statement_list statement

statement
:EOS // P1
| LCB statement_list RCB // P1
| assignment_expression EOS // P1
| selection_statement // P2
| iteration_statement // P2
| procedure_call // P3
| printf_call // P1
| RETURN expression EOS // P1

assignment_expression
: unary_expression OP_ASSIGN expression // P1

expression
: logical_and_expression // P1
| expression OP_OR logical_and_expression // Pl

logical_and_expression
: equality_expression // P1
| logical_and_expression OP_AND equality_expression // P1

equality_expression
: relational_expression // P1
| equality_expression OP_EQ relational_expression // P1
| equality_expression OP_NEQ relational_expression // P1

relational_expression
: additive_expression
| relational_expression OP_LT additive_expression // P1
| relational_expression OP_GT additive_expression // Pl
| relational_expression OP_LTE additive_expression // Pl
| relational_expression OP_GTE additive_expression // Pl
additive_expression
: multiplicative_expression // P1
| additive_expression OP_ADD multiplicative_expression // Pl
| additive_expression OP_SUB multiplicative_expression // P1

multiplicative_expression
: unary_expression // P1
| multiplicative_expression OP_MUL unary_expression // P1
| multiplicative_expression OP_DIV unary_expression // Pl

unary_expression
:postfix_expression // P1
| unary_operator unary_expression // P1

postfix_expression
: primary_expression // P1
| postfix_expression OP_INC // P1
| IDENTIFIER LRB RRB //-n
| IDENTIFIER LRB expression_list RRB // n
| postfix_expression OP_MEM IDENTIFIER // P4
| postfix_expression OP_PTR IDENTIFIER // P5
| postfix_expression LSB expression RSB // P6

primary_expression
: IDENTIFIER // P1
| CONSTANT_INT // P1
| LRB expression RRB // P1

unary_operator
: OP_SUB // n
| OP_NOT // P1
| OP_ADDR // P5
| OP_MUL // P5
/* Selection Statement */
selection_statement
: IF LRB expression RRB statement ELSE statement // P2
/* Iteration Statement */
iteration_statement
: WHILE LRB expression RRB statement // P2
| FOR LRB assignment_expression EOS expression EOS assignment_expression RRB
statement // P2

/* Expression List */
expression_list
:expression // P1
| expression_list COMMA expression // P1
/* Procedure Call */
procedure_call
| IDENTIFIER LRB RRB // P3
LRB expression_list RRB EOS // P3
| IDENTIFIER

printf_call
: PRINTF LRB CONSTANT_STR RRB // P1
| PRINTF LRB CONSTANT_STR COMMA expression_list RRB EOS // P1