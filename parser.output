Terminals unused in grammar

    OTHERS
    '\n'


Grammar

    0 $accept: begin_nterm $end

    1 $@1: %empty

    2 begin_nterm: $@1 translation_unit

    3 translation_unit: struct_specifier
    4                 | function_definition
    5                 | translation_unit struct_specifier
    6                 | translation_unit function_definition

    7 $@2: %empty

    8 struct_specifier: STRUCT IDENTIFIER $@2 '{' declaration_list '}' ';'

    9 function_definition: type_specifier fun_declarator compound_statement

   10 type_specifier: VOID
   11               | INT
   12               | FLOAT
   13               | STRUCT IDENTIFIER

   14 fun_declarator: IDENTIFIER '(' parameter_list ')'
   15               | IDENTIFIER '(' ')'

   16 parameter_list: parameter_declaration
   17               | parameter_list ',' parameter_declaration

   18 parameter_declaration: type_specifier declarator

   19 declarator_arr: IDENTIFIER
   20               | declarator_arr '[' INT_CONSTANT ']'

   21 declarator: declarator_arr
   22           | '*' declarator

   23 compound_statement: '{' '}'
   24                   | '{' statement_list '}'
   25                   | '{' declaration_list '}'
   26                   | '{' declaration_list statement_list '}'

   27 statement_list: statement
   28               | statement_list statement

   29 statement: ';'
   30          | '{' statement_list '}'
   31          | selection_statement
   32          | iteration_statement
   33          | assignment_statement
   34          | procedure_call
   35          | RETURN expression ';'

   36 assignment_expression: unary_expression '=' expression

   37 assignment_statement: assignment_expression ';'

   38 procedure_call: IDENTIFIER '(' ')' ';'
   39               | IDENTIFIER '(' expression_list ')' ';'

   40 expression: logical_and_expression
   41           | expression OR_OP logical_and_expression

   42 logical_and_expression: equality_expression
   43                       | logical_and_expression AND_OP equality_expression

   44 equality_expression: relational_expression
   45                    | equality_expression EQ_OP relational_expression
   46                    | equality_expression NE_OP relational_expression

   47 relational_expression: additive_expression
   48                      | relational_expression '<' additive_expression
   49                      | relational_expression '>' additive_expression
   50                      | relational_expression LE_OP additive_expression
   51                      | relational_expression GE_OP additive_expression

   52 additive_expression: multiplicative_expression
   53                    | additive_expression '+' multiplicative_expression
   54                    | additive_expression '-' multiplicative_expression

   55 unary_expression: postfix_expression
   56                 | unary_operator unary_expression

   57 multiplicative_expression: unary_expression
   58                          | multiplicative_expression '*' unary_expression
   59                          | multiplicative_expression '/' unary_expression

   60 postfix_expression: primary_expression
   61                   | postfix_expression '[' expression ']'
   62                   | IDENTIFIER '(' ')'
   63                   | IDENTIFIER '(' expression_list ')'
   64                   | postfix_expression '.' IDENTIFIER
   65                   | postfix_expression PTR_OP IDENTIFIER
   66                   | postfix_expression INC_OP

   67 primary_expression: IDENTIFIER
   68                   | INT_CONSTANT
   69                   | FLOAT_CONSTANT
   70                   | STRING_LITERAL
   71                   | '(' expression ')'

   72 expression_list: expression
   73                | expression_list ',' expression

   74 unary_operator: '-'
   75               | '!'
   76               | '&'
   77               | '*'

   78 selection_statement: IF '(' expression ')' statement ELSE statement

   79 iteration_statement: WHILE '(' expression ')' statement
   80                    | FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement

   81 declaration_list: declaration
   82                 | declaration_list declaration

   83 declaration: type_specifier declarator_list ';'

   84 declarator_list: declarator
   85                | declarator_list ',' declarator


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10)
    '!' (33) 75
    '&' (38) 76
    '(' (40) 14 15 38 39 62 63 71 78 79 80
    ')' (41) 14 15 38 39 62 63 71 78 79 80
    '*' (42) 22 58 77
    '+' (43) 53
    ',' (44) 17 73 85
    '-' (45) 54 74
    '.' (46) 64
    '/' (47) 59
    ';' (59) 8 29 35 37 38 39 80 83
    '<' (60) 48
    '=' (61) 36
    '>' (62) 49
    '[' (91) 20 61
    ']' (93) 20 61
    '{' (123) 8 23 24 25 26 30
    '}' (125) 8 23 24 25 26 30
    error (256)
    VOID <std::string> (258) 10
    INT <std::string> (259) 11
    FLOAT <std::string> (260) 12
    STRUCT <std::string> (261) 8 13
    IDENTIFIER <std::string> (262) 8 13 14 15 19 38 39 62 63 64 65 67
    INT_CONSTANT <std::string> (263) 20 68
    FLOAT_CONSTANT <std::string> (264) 69
    STRING_LITERAL <std::string> (265) 70
    OR_OP <std::string> (266) 41
    AND_OP <std::string> (267) 43
    EQ_OP <std::string> (268) 45
    NE_OP <std::string> (269) 46
    LE_OP <std::string> (270) 50
    GE_OP <std::string> (271) 51
    INC_OP <std::string> (272) 66
    PTR_OP <std::string> (273) 65
    IF <std::string> (274) 78
    ELSE <std::string> (275) 78
    WHILE <std::string> (276) 79
    FOR <std::string> (277) 80
    RETURN <std::string> (278) 35
    OTHERS <std::string> (279)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    translation_unit <std::vector<abstract_astnode*>> (45)
        on left: 3 4 5 6
        on right: 2 5 6
    begin_nterm <std::vector<abstract_astnode*>> (46)
        on left: 2
        on right: 0
    struct_specifier <abstract_astnode*> (47)
        on left: 8
        on right: 3 5
    procedure_call <abstract_astnode*> (48)
        on left: 38 39
        on right: 34
    declaration_list <abstract_astnode*> (49)
        on left: 81 82
        on right: 8 25 26 82
    expression <exp_astnode*> (50)
        on left: 40 41
        on right: 35 36 41 61 71 72 73 78 79 80
    logical_and_expression <exp_astnode*> (51)
        on left: 42 43
        on right: 40 41 43
    equality_expression <exp_astnode*> (52)
        on left: 44 45 46
        on right: 42 43 45 46
    relational_expression <exp_astnode*> (53)
        on left: 47 48 49 50 51
        on right: 44 45 46 48 49 50 51
    additive_expression <exp_astnode*> (54)
        on left: 52 53 54
        on right: 47 48 49 50 51 53 54
    unary_expression <exp_astnode*> (55)
        on left: 55 56
        on right: 36 56 57 58 59
    multiplicative_expression <exp_astnode*> (56)
        on left: 57 58 59
        on right: 52 53 54 58 59
    postfix_expression <exp_astnode*> (57)
        on left: 60 61 62 63 64 65 66
        on right: 55 61 64 65 66
    primary_expression <exp_astnode*> (58)
        on left: 67 68 69 70 71
        on right: 60
    expression_list <exp_astnode*> (59)
        on left: 72 73
        on right: 39 63 73
    assignment_expression <assignE_astnode*> (60)
        on left: 36
        on right: 37 80
    function_definition <statement_astnode*> (61)
        on left: 9
        on right: 4 6
    statement <statement_astnode*> (62)
        on left: 29 30 31 32 33 34 35
        on right: 27 28 78 79 80
    selection_statement <statement_astnode*> (63)
        on left: 78
        on right: 31
    iteration_statement <statement_astnode*> (64)
        on left: 79 80
        on right: 32
    assignment_statement <statement_astnode*> (65)
        on left: 37
        on right: 33
    compound_statement <std::vector<statement_astnode*>> (66)
        on left: 23 24 25 26
        on right: 9
    statement_list <std::vector<statement_astnode*>> (67)
        on left: 27 28
        on right: 24 26 28 30
    unary_operator <std::string> (68)
        on left: 74 75 76 77
        on right: 56
    type_specifier <typespec_astnode> (69)
        on left: 10 11 12 13
        on right: 9 18 83
    declaration <typespec_astnode> (70)
        on left: 83
        on right: 81 82
    declarator_list <typespec_astnode> (71)
        on left: 84 85
        on right: 83 85
    declarator <typespec_astnode> (72)
        on left: 21 22
        on right: 18 22 84 85
    declarator_arr <typespec_astnode> (73)
        on left: 19 20
        on right: 20 21
    parameter_declaration <typespec_astnode> (74)
        on left: 18
        on right: 16 17
    parameter_list <std::vector<typespec_astnode>> (75)
        on left: 16 17
        on right: 14 17
    fun_declarator <fundeclarator_astnode*> (76)
        on left: 14 15
        on right: 9
    $@1 (77)
        on left: 1
        on right: 2
    $@2 (78)
        on left: 7
        on right: 8


State 0

    0 $accept: . begin_nterm $end

    $default  reduce using rule 1 ($@1)

    begin_nterm  go to state 1
    $@1          go to state 2


State 1

    0 $accept: begin_nterm . $end

    $end  shift, and go to state 3


State 2

    2 begin_nterm: $@1 . translation_unit

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 7

    translation_unit     go to state 8
    struct_specifier     go to state 9
    function_definition  go to state 10
    type_specifier       go to state 11


State 3

    0 $accept: begin_nterm $end .

    $default  accept


State 4

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: INT .

    $default  reduce using rule 11 (type_specifier)


State 6

   12 type_specifier: FLOAT .

    $default  reduce using rule 12 (type_specifier)


State 7

    8 struct_specifier: STRUCT . IDENTIFIER $@2 '{' declaration_list '}' ';'
   13 type_specifier: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 12


State 8

    2 begin_nterm: $@1 translation_unit .
    5 translation_unit: translation_unit . struct_specifier
    6                 | translation_unit . function_definition

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 7

    $default  reduce using rule 2 (begin_nterm)

    struct_specifier     go to state 13
    function_definition  go to state 14
    type_specifier       go to state 11


State 9

    3 translation_unit: struct_specifier .

    $default  reduce using rule 3 (translation_unit)


State 10

    4 translation_unit: function_definition .

    $default  reduce using rule 4 (translation_unit)


State 11

    9 function_definition: type_specifier . fun_declarator compound_statement

    IDENTIFIER  shift, and go to state 15

    fun_declarator  go to state 16


State 12

    8 struct_specifier: STRUCT IDENTIFIER . $@2 '{' declaration_list '}' ';'
   13 type_specifier: STRUCT IDENTIFIER .

    IDENTIFIER  reduce using rule 13 (type_specifier)
    $default    reduce using rule 7 ($@2)

    $@2  go to state 17


State 13

    5 translation_unit: translation_unit struct_specifier .

    $default  reduce using rule 5 (translation_unit)


State 14

    6 translation_unit: translation_unit function_definition .

    $default  reduce using rule 6 (translation_unit)


State 15

   14 fun_declarator: IDENTIFIER . '(' parameter_list ')'
   15               | IDENTIFIER . '(' ')'

    '('  shift, and go to state 18


State 16

    9 function_definition: type_specifier fun_declarator . compound_statement

    '{'  shift, and go to state 19

    compound_statement  go to state 20


State 17

    8 struct_specifier: STRUCT IDENTIFIER $@2 . '{' declaration_list '}' ';'

    '{'  shift, and go to state 21


State 18

   14 fun_declarator: IDENTIFIER '(' . parameter_list ')'
   15               | IDENTIFIER '(' . ')'

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 22
    ')'     shift, and go to state 23

    type_specifier         go to state 24
    parameter_declaration  go to state 25
    parameter_list         go to state 26


State 19

   23 compound_statement: '{' . '}'
   24                   | '{' . statement_list '}'
   25                   | '{' . declaration_list '}'
   26                   | '{' . declaration_list statement_list '}'

    VOID            shift, and go to state 4
    INT             shift, and go to state 5
    FLOAT           shift, and go to state 6
    STRUCT          shift, and go to state 22
    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 39
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    declaration_list       go to state 44
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 49
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    statement_list         go to state 53
    unary_operator         go to state 54
    type_specifier         go to state 55
    declaration            go to state 56


State 20

    9 function_definition: type_specifier fun_declarator compound_statement .

    $default  reduce using rule 9 (function_definition)


State 21

    8 struct_specifier: STRUCT IDENTIFIER $@2 '{' . declaration_list '}' ';'

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 22

    declaration_list  go to state 57
    type_specifier    go to state 55
    declaration       go to state 56


State 22

   13 type_specifier: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 58


State 23

   15 fun_declarator: IDENTIFIER '(' ')' .

    $default  reduce using rule 15 (fun_declarator)


State 24

   18 parameter_declaration: type_specifier . declarator

    IDENTIFIER  shift, and go to state 59
    '*'         shift, and go to state 60

    declarator      go to state 61
    declarator_arr  go to state 62


State 25

   16 parameter_list: parameter_declaration .

    $default  reduce using rule 16 (parameter_list)


State 26

   14 fun_declarator: IDENTIFIER '(' parameter_list . ')'
   17 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 63
    ','  shift, and go to state 64


State 27

   38 procedure_call: IDENTIFIER . '(' ')' ';'
   39               | IDENTIFIER . '(' expression_list ')' ';'
   62 postfix_expression: IDENTIFIER . '(' ')'
   63                   | IDENTIFIER . '(' expression_list ')'
   67 primary_expression: IDENTIFIER .

    '('  shift, and go to state 65

    $default  reduce using rule 67 (primary_expression)


State 28

   68 primary_expression: INT_CONSTANT .

    $default  reduce using rule 68 (primary_expression)


State 29

   69 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 69 (primary_expression)


State 30

   70 primary_expression: STRING_LITERAL .

    $default  reduce using rule 70 (primary_expression)


State 31

   78 selection_statement: IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 66


State 32

   79 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 67


State 33

   80 iteration_statement: FOR . '(' assignment_expression ';' expression ';' assignment_expression ')' statement

    '('  shift, and go to state 68


State 34

   35 statement: RETURN . expression ';'

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 70
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 35

   74 unary_operator: '-' .

    $default  reduce using rule 74 (unary_operator)


State 36

   77 unary_operator: '*' .

    $default  reduce using rule 77 (unary_operator)


State 37

   71 primary_expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 77
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 38

   30 statement: '{' . statement_list '}'

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 49
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    statement_list         go to state 78
    unary_operator         go to state 54


State 39

   23 compound_statement: '{' '}' .

    $default  reduce using rule 23 (compound_statement)


State 40

   75 unary_operator: '!' .

    $default  reduce using rule 75 (unary_operator)


State 41

   76 unary_operator: '&' .

    $default  reduce using rule 76 (unary_operator)


State 42

   29 statement: ';' .

    $default  reduce using rule 29 (statement)


State 43

   34 statement: procedure_call .

    $default  reduce using rule 34 (statement)


State 44

   25 compound_statement: '{' declaration_list . '}'
   26                   | '{' declaration_list . statement_list '}'
   82 declaration_list: declaration_list . declaration

    VOID            shift, and go to state 4
    INT             shift, and go to state 5
    FLOAT           shift, and go to state 6
    STRUCT          shift, and go to state 22
    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 79
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 49
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    statement_list         go to state 80
    unary_operator         go to state 54
    type_specifier         go to state 55
    declaration            go to state 81


State 45

   36 assignment_expression: unary_expression . '=' expression

    '='  shift, and go to state 82


State 46

   55 unary_expression: postfix_expression .
   61 postfix_expression: postfix_expression . '[' expression ']'
   64                   | postfix_expression . '.' IDENTIFIER
   65                   | postfix_expression . PTR_OP IDENTIFIER
   66                   | postfix_expression . INC_OP

    INC_OP  shift, and go to state 83
    PTR_OP  shift, and go to state 84
    '['     shift, and go to state 85
    '.'     shift, and go to state 86

    $default  reduce using rule 55 (unary_expression)


State 47

   60 postfix_expression: primary_expression .

    $default  reduce using rule 60 (postfix_expression)


State 48

   37 assignment_statement: assignment_expression . ';'

    ';'  shift, and go to state 87


State 49

   27 statement_list: statement .

    $default  reduce using rule 27 (statement_list)


State 50

   31 statement: selection_statement .

    $default  reduce using rule 31 (statement)


State 51

   32 statement: iteration_statement .

    $default  reduce using rule 32 (statement)


State 52

   33 statement: assignment_statement .

    $default  reduce using rule 33 (statement)


State 53

   24 compound_statement: '{' statement_list . '}'
   28 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 88
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 89
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    unary_operator         go to state 54


State 54

   56 unary_expression: unary_operator . unary_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression    go to state 90
    postfix_expression  go to state 46
    primary_expression  go to state 47
    unary_operator      go to state 54


State 55

   83 declaration: type_specifier . declarator_list ';'

    IDENTIFIER  shift, and go to state 59
    '*'         shift, and go to state 60

    declarator_list  go to state 91
    declarator       go to state 92
    declarator_arr   go to state 62


State 56

   81 declaration_list: declaration .

    $default  reduce using rule 81 (declaration_list)


State 57

    8 struct_specifier: STRUCT IDENTIFIER $@2 '{' declaration_list . '}' ';'
   82 declaration_list: declaration_list . declaration

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 22
    '}'     shift, and go to state 93

    type_specifier  go to state 55
    declaration     go to state 81


State 58

   13 type_specifier: STRUCT IDENTIFIER .

    $default  reduce using rule 13 (type_specifier)


State 59

   19 declarator_arr: IDENTIFIER .

    $default  reduce using rule 19 (declarator_arr)


State 60

   22 declarator: '*' . declarator

    IDENTIFIER  shift, and go to state 59
    '*'         shift, and go to state 60

    declarator      go to state 94
    declarator_arr  go to state 62


State 61

   18 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 18 (parameter_declaration)


State 62

   20 declarator_arr: declarator_arr . '[' INT_CONSTANT ']'
   21 declarator: declarator_arr .

    '['  shift, and go to state 95

    $default  reduce using rule 21 (declarator)


State 63

   14 fun_declarator: IDENTIFIER '(' parameter_list ')' .

    $default  reduce using rule 14 (fun_declarator)


State 64

   17 parameter_list: parameter_list ',' . parameter_declaration

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 22

    type_specifier         go to state 24
    parameter_declaration  go to state 96


State 65

   38 procedure_call: IDENTIFIER '(' . ')' ';'
   39               | IDENTIFIER '(' . expression_list ')' ';'
   62 postfix_expression: IDENTIFIER '(' . ')'
   63                   | IDENTIFIER '(' . expression_list ')'

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    ')'             shift, and go to state 97
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 98
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    expression_list            go to state 99
    unary_operator             go to state 54


State 66

   78 selection_statement: IF '(' . expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 100
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 67

   79 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 101
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 68

   80 iteration_statement: FOR '(' . assignment_expression ';' expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 102
    unary_operator         go to state 54


State 69

   62 postfix_expression: IDENTIFIER . '(' ')'
   63                   | IDENTIFIER . '(' expression_list ')'
   67 primary_expression: IDENTIFIER .

    '('  shift, and go to state 103

    $default  reduce using rule 67 (primary_expression)


State 70

   35 statement: RETURN expression . ';'
   41 expression: expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 104
    ';'    shift, and go to state 105


State 71

   40 expression: logical_and_expression .
   43 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 106

    $default  reduce using rule 40 (expression)


State 72

   42 logical_and_expression: equality_expression .
   45 equality_expression: equality_expression . EQ_OP relational_expression
   46                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 107
    NE_OP  shift, and go to state 108

    $default  reduce using rule 42 (logical_and_expression)


State 73

   44 equality_expression: relational_expression .
   48 relational_expression: relational_expression . '<' additive_expression
   49                      | relational_expression . '>' additive_expression
   50                      | relational_expression . LE_OP additive_expression
   51                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 109
    GE_OP  shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112

    $default  reduce using rule 44 (equality_expression)


State 74

   47 relational_expression: additive_expression .
   53 additive_expression: additive_expression . '+' multiplicative_expression
   54                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 47 (relational_expression)


State 75

   57 multiplicative_expression: unary_expression .

    $default  reduce using rule 57 (multiplicative_expression)


State 76

   52 additive_expression: multiplicative_expression .
   58 multiplicative_expression: multiplicative_expression . '*' unary_expression
   59                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 52 (additive_expression)


State 77

   41 expression: expression . OR_OP logical_and_expression
   71 primary_expression: '(' expression . ')'

    OR_OP  shift, and go to state 104
    ')'    shift, and go to state 117


State 78

   28 statement_list: statement_list . statement
   30 statement: '{' statement_list . '}'

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 118
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 89
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    unary_operator         go to state 54


State 79

   25 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 25 (compound_statement)


State 80

   26 compound_statement: '{' declaration_list statement_list . '}'
   28 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 119
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 89
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    unary_operator         go to state 54


State 81

   82 declaration_list: declaration_list declaration .

    $default  reduce using rule 82 (declaration_list)


State 82

   36 assignment_expression: unary_expression '=' . expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 120
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 83

   66 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 66 (postfix_expression)


State 84

   65 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 121


State 85

   61 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 122
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 86

   64 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 87

   37 assignment_statement: assignment_expression ';' .

    $default  reduce using rule 37 (assignment_statement)


State 88

   24 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 24 (compound_statement)


State 89

   28 statement_list: statement_list statement .

    $default  reduce using rule 28 (statement_list)


State 90

   56 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 56 (unary_expression)


State 91

   83 declaration: type_specifier declarator_list . ';'
   85 declarator_list: declarator_list . ',' declarator

    ','  shift, and go to state 124
    ';'  shift, and go to state 125


State 92

   84 declarator_list: declarator .

    $default  reduce using rule 84 (declarator_list)


State 93

    8 struct_specifier: STRUCT IDENTIFIER $@2 '{' declaration_list '}' . ';'

    ';'  shift, and go to state 126


State 94

   22 declarator: '*' declarator .

    $default  reduce using rule 22 (declarator)


State 95

   20 declarator_arr: declarator_arr '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 127


State 96

   17 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 17 (parameter_list)


State 97

   38 procedure_call: IDENTIFIER '(' ')' . ';'
   62 postfix_expression: IDENTIFIER '(' ')' .

    ';'  shift, and go to state 128

    $default  reduce using rule 62 (postfix_expression)


State 98

   41 expression: expression . OR_OP logical_and_expression
   72 expression_list: expression .

    OR_OP  shift, and go to state 104

    $default  reduce using rule 72 (expression_list)


State 99

   39 procedure_call: IDENTIFIER '(' expression_list . ')' ';'
   63 postfix_expression: IDENTIFIER '(' expression_list . ')'
   73 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 129
    ','  shift, and go to state 130


State 100

   41 expression: expression . OR_OP logical_and_expression
   78 selection_statement: IF '(' expression . ')' statement ELSE statement

    OR_OP  shift, and go to state 104
    ')'    shift, and go to state 131


State 101

   41 expression: expression . OR_OP logical_and_expression
   79 iteration_statement: WHILE '(' expression . ')' statement

    OR_OP  shift, and go to state 104
    ')'    shift, and go to state 132


State 102

   80 iteration_statement: FOR '(' assignment_expression . ';' expression ';' assignment_expression ')' statement

    ';'  shift, and go to state 133


State 103

   62 postfix_expression: IDENTIFIER '(' . ')'
   63                   | IDENTIFIER '(' . expression_list ')'

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    ')'             shift, and go to state 134
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 98
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    expression_list            go to state 135
    unary_operator             go to state 54


State 104

   41 expression: expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    logical_and_expression     go to state 136
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 105

   35 statement: RETURN expression ';' .

    $default  reduce using rule 35 (statement)


State 106

   43 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    equality_expression        go to state 137
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 107

   45 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    relational_expression      go to state 138
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 108

   46 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    relational_expression      go to state 139
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 109

   50 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    additive_expression        go to state 140
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 110

   51 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    additive_expression        go to state 141
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 111

   48 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    additive_expression        go to state 142
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 112

   49 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    additive_expression        go to state 143
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 113

   53 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression           go to state 75
    multiplicative_expression  go to state 144
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 114

   54 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression           go to state 75
    multiplicative_expression  go to state 145
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 115

   58 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression    go to state 146
    postfix_expression  go to state 46
    primary_expression  go to state 47
    unary_operator      go to state 54


State 116

   59 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression    go to state 147
    postfix_expression  go to state 46
    primary_expression  go to state 47
    unary_operator      go to state 54


State 117

   71 primary_expression: '(' expression ')' .

    $default  reduce using rule 71 (primary_expression)


State 118

   30 statement: '{' statement_list '}' .

    $default  reduce using rule 30 (statement)


State 119

   26 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 26 (compound_statement)


State 120

   36 assignment_expression: unary_expression '=' expression .
   41 expression: expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 104

    $default  reduce using rule 36 (assignment_expression)


State 121

   65 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 65 (postfix_expression)


State 122

   41 expression: expression . OR_OP logical_and_expression
   61 postfix_expression: postfix_expression '[' expression . ']'

    OR_OP  shift, and go to state 104
    ']'    shift, and go to state 148


State 123

   64 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 64 (postfix_expression)


State 124

   85 declarator_list: declarator_list ',' . declarator

    IDENTIFIER  shift, and go to state 59
    '*'         shift, and go to state 60

    declarator      go to state 149
    declarator_arr  go to state 62


State 125

   83 declaration: type_specifier declarator_list ';' .

    $default  reduce using rule 83 (declaration)


State 126

    8 struct_specifier: STRUCT IDENTIFIER $@2 '{' declaration_list '}' ';' .

    $default  reduce using rule 8 (struct_specifier)


State 127

   20 declarator_arr: declarator_arr '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 150


State 128

   38 procedure_call: IDENTIFIER '(' ')' ';' .

    $default  reduce using rule 38 (procedure_call)


State 129

   39 procedure_call: IDENTIFIER '(' expression_list ')' . ';'
   63 postfix_expression: IDENTIFIER '(' expression_list ')' .

    ';'  shift, and go to state 151

    $default  reduce using rule 63 (postfix_expression)


State 130

   73 expression_list: expression_list ',' . expression

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 152
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 131

   78 selection_statement: IF '(' expression ')' . statement ELSE statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 153
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    unary_operator         go to state 54


State 132

   79 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 154
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    unary_operator         go to state 54


State 133

   80 iteration_statement: FOR '(' assignment_expression ';' . expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 155
    logical_and_expression     go to state 71
    equality_expression        go to state 72
    relational_expression      go to state 73
    additive_expression        go to state 74
    unary_expression           go to state 75
    multiplicative_expression  go to state 76
    postfix_expression         go to state 46
    primary_expression         go to state 47
    unary_operator             go to state 54


State 134

   62 postfix_expression: IDENTIFIER '(' ')' .

    $default  reduce using rule 62 (postfix_expression)


State 135

   63 postfix_expression: IDENTIFIER '(' expression_list . ')'
   73 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 156
    ','  shift, and go to state 130


State 136

   41 expression: expression OR_OP logical_and_expression .
   43 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 106

    $default  reduce using rule 41 (expression)


State 137

   43 logical_and_expression: logical_and_expression AND_OP equality_expression .
   45 equality_expression: equality_expression . EQ_OP relational_expression
   46                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 107
    NE_OP  shift, and go to state 108

    $default  reduce using rule 43 (logical_and_expression)


State 138

   45 equality_expression: equality_expression EQ_OP relational_expression .
   48 relational_expression: relational_expression . '<' additive_expression
   49                      | relational_expression . '>' additive_expression
   50                      | relational_expression . LE_OP additive_expression
   51                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 109
    GE_OP  shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112

    $default  reduce using rule 45 (equality_expression)


State 139

   46 equality_expression: equality_expression NE_OP relational_expression .
   48 relational_expression: relational_expression . '<' additive_expression
   49                      | relational_expression . '>' additive_expression
   50                      | relational_expression . LE_OP additive_expression
   51                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 109
    GE_OP  shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112

    $default  reduce using rule 46 (equality_expression)


State 140

   50 relational_expression: relational_expression LE_OP additive_expression .
   53 additive_expression: additive_expression . '+' multiplicative_expression
   54                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 50 (relational_expression)


State 141

   51 relational_expression: relational_expression GE_OP additive_expression .
   53 additive_expression: additive_expression . '+' multiplicative_expression
   54                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 51 (relational_expression)


State 142

   48 relational_expression: relational_expression '<' additive_expression .
   53 additive_expression: additive_expression . '+' multiplicative_expression
   54                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 48 (relational_expression)


State 143

   49 relational_expression: relational_expression '>' additive_expression .
   53 additive_expression: additive_expression . '+' multiplicative_expression
   54                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 49 (relational_expression)


State 144

   53 additive_expression: additive_expression '+' multiplicative_expression .
   58 multiplicative_expression: multiplicative_expression . '*' unary_expression
   59                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 53 (additive_expression)


State 145

   54 additive_expression: additive_expression '-' multiplicative_expression .
   58 multiplicative_expression: multiplicative_expression . '*' unary_expression
   59                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 54 (additive_expression)


State 146

   58 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 58 (multiplicative_expression)


State 147

   59 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 59 (multiplicative_expression)


State 148

   61 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 61 (postfix_expression)


State 149

   85 declarator_list: declarator_list ',' declarator .

    $default  reduce using rule 85 (declarator_list)


State 150

   20 declarator_arr: declarator_arr '[' INT_CONSTANT ']' .

    $default  reduce using rule 20 (declarator_arr)


State 151

   39 procedure_call: IDENTIFIER '(' expression_list ')' ';' .

    $default  reduce using rule 39 (procedure_call)


State 152

   41 expression: expression . OR_OP logical_and_expression
   73 expression_list: expression_list ',' expression .

    OR_OP  shift, and go to state 104

    $default  reduce using rule 73 (expression_list)


State 153

   78 selection_statement: IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 157


State 154

   79 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 79 (iteration_statement)


State 155

   41 expression: expression . OR_OP logical_and_expression
   80 iteration_statement: FOR '(' assignment_expression ';' expression . ';' assignment_expression ')' statement

    OR_OP  shift, and go to state 104
    ';'    shift, and go to state 158


State 156

   63 postfix_expression: IDENTIFIER '(' expression_list ')' .

    $default  reduce using rule 63 (postfix_expression)


State 157

   78 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 159
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    unary_operator         go to state 54


State 158

   80 iteration_statement: FOR '(' assignment_expression ';' expression ';' . assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 69
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 160
    unary_operator         go to state 54


State 159

   78 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 78 (selection_statement)


State 160

   80 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression . ')' statement

    ')'  shift, and go to state 161


State 161

   80 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    procedure_call         go to state 43
    unary_expression       go to state 45
    postfix_expression     go to state 46
    primary_expression     go to state 47
    assignment_expression  go to state 48
    statement              go to state 162
    selection_statement    go to state 50
    iteration_statement    go to state 51
    assignment_statement   go to state 52
    unary_operator         go to state 54


State 162

   80 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement .

    $default  reduce using rule 80 (iteration_statement)
