Terminals unused in grammar

    FLOAT
    FLOAT_CONSTANT
    OTHERS
    '\n'


Grammar

    0 $accept: begin_nterm $end

    1 $@1: ε

    2 begin_nterm: $@1 program

    3 program: main_definition
    4        | translation_unit main_definition

    5 $@2: ε

    6 main_definition: INT MAIN '(' ')' $@2 compound_statement

    7 translation_unit: struct_specifier
    8                 | function_definition
    9                 | translation_unit struct_specifier
   10                 | translation_unit function_definition

   11 $@3: ε

   12 struct_specifier: STRUCT IDENTIFIER $@3 '{' declaration_list '}' ';'

   13 function_definition: type_specifier fun_declarator compound_statement

   14 type_specifier: VOID
   15               | INT
   16               | STRUCT IDENTIFIER

   17 $@4: ε

   18 fun_declarator: IDENTIFIER '(' $@4 parameter_list ')'
   19               | IDENTIFIER '(' ')'

   20 parameter_list: parameter_declaration
   21               | parameter_list ',' parameter_declaration

   22 parameter_declaration: type_specifier declarator

   23 declarator_arr: IDENTIFIER
   24               | declarator_arr '[' INT_CONSTANT ']'

   25 declarator: declarator_arr
   26           | '*' declarator

   27 compound_statement: '{' '}'
   28                   | '{' statement_list '}'
   29                   | '{' declaration_list '}'
   30                   | '{' declaration_list statement_list '}'

   31 statement_list: statement
   32               | statement_list statement

   33 statement: ';'
   34          | '{' statement_list '}'
   35          | selection_statement
   36          | iteration_statement
   37          | assignment_statement
   38          | procedure_call
   39          | printf_call
   40          | RETURN expression ';'

   41 printf_call: PRINTF '(' STRING_LITERAL ')' ';'
   42            | PRINTF '(' STRING_LITERAL ',' expression_list ')' ';'

   43 assignment_expression: unary_expression '=' expression

   44 assignment_statement: assignment_expression ';'

   45 procedure_call: IDENTIFIER '(' ')' ';'
   46               | IDENTIFIER '(' expression_list ')' ';'

   47 expression: logical_and_expression
   48           | expression OR_OP mnterm logical_and_expression

   49 mnterm: ε

   50 ifgotocoder: equality_expression

   51 logical_and_expression: ifgotocoder
   52                       | logical_and_expression AND_OP mnterm ifgotocoder

   53 equality_expression: relational_expression
   54                    | equality_expression EQ_OP relational_expression
   55                    | equality_expression NE_OP relational_expression

   56 relational_expression: additive_expression
   57                      | relational_expression '<' additive_expression
   58                      | relational_expression '>' additive_expression
   59                      | relational_expression LE_OP additive_expression
   60                      | relational_expression GE_OP additive_expression

   61 additive_expression: multiplicative_expression
   62                    | additive_expression '+' multiplicative_expression
   63                    | additive_expression '-' multiplicative_expression

   64 unary_expression: postfix_expression
   65                 | unary_operator unary_expression

   66 multiplicative_expression: unary_expression
   67                          | multiplicative_expression '*' unary_expression
   68                          | multiplicative_expression '/' unary_expression

   69 postfix_expression: primary_expression
   70                   | postfix_expression '[' expression ']'
   71                   | IDENTIFIER '(' ')'
   72                   | IDENTIFIER '(' expression_list ')'
   73                   | postfix_expression '.' IDENTIFIER
   74                   | postfix_expression PTR_OP IDENTIFIER
   75                   | postfix_expression INC_OP

   76 primary_expression: IDENTIFIER
   77                   | INT_CONSTANT
   78                   | STRING_LITERAL
   79                   | '(' expression ')'

   80 expression_list: expression
   81                | expression_list ',' expression

   82 unary_operator: '-'
   83               | '!'
   84               | '&'
   85               | '*'

   86 $@5: ε

   87 $@6: ε

   88 $@7: ε

   89 $@8: ε

   90 selection_statement: IF $@5 '(' expression ')' $@6 statement $@7 ELSE $@8 statement

   91 $@9: ε

   92 $@10: ε

   93 $@11: ε

   94 iteration_statement: WHILE $@9 mnterm '(' expression ')' $@10 mnterm $@11 statement

   95 $@12: ε

   96 $@13: ε

   97 $@14: ε

   98 $@15: ε

   99 $@16: ε

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

  101 declaration_list: declaration
  102                 | declaration_list declaration

  103 declaration: type_specifier declarator_list ';'

  104 declarator_list: declarator
  105                | declarator_list ',' declarator


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10)
    '!' (33) 83
    '&' (38) 84
    '(' (40) 6 18 19 41 42 45 46 71 72 79 90 94 100
    ')' (41) 6 18 19 41 42 45 46 71 72 79 90 94 100
    '*' (42) 26 67 85
    '+' (43) 62
    ',' (44) 21 42 81 105
    '-' (45) 63 82
    '.' (46) 73
    '/' (47) 68
    ';' (59) 12 33 40 41 42 44 45 46 100 103
    '<' (60) 57
    '=' (61) 43
    '>' (62) 58
    '[' (91) 24 70
    ']' (93) 24 70
    '{' (123) 12 27 28 29 30 34
    '}' (125) 12 27 28 29 30 34
    error (256)
    VOID <std::string> (258) 14
    INT <std::string> (259) 6 15
    FLOAT <std::string> (260)
    STRUCT <std::string> (261) 12 16
    IDENTIFIER <std::string> (262) 12 16 18 19 23 45 46 71 72 73 74 76
    INT_CONSTANT <std::string> (263) 24 77
    FLOAT_CONSTANT <std::string> (264)
    STRING_LITERAL <std::string> (265) 41 42 78
    OR_OP <std::string> (266) 48
    AND_OP <std::string> (267) 52
    EQ_OP <std::string> (268) 54
    NE_OP <std::string> (269) 55
    LE_OP <std::string> (270) 59
    GE_OP <std::string> (271) 60
    INC_OP <std::string> (272) 75
    PTR_OP <std::string> (273) 74
    IF <std::string> (274) 90
    MAIN <std::string> (275) 6
    PRINTF <std::string> (276) 41 42
    ELSE <std::string> (277) 90
    WHILE <std::string> (278) 94
    FOR <std::string> (279) 100
    RETURN <std::string> (280) 40
    OTHERS <std::string> (281)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    begin_nterm <std::vector<abstract_astnode*>> (47)
        on left: 2
        on right: 0
    $@1 (48)
        on left: 1
        on right: 2
    program <std::vector<abstract_astnode*>> (49)
        on left: 3 4
        on right: 2
    main_definition <statement_astnode*> (50)
        on left: 6
        on right: 3 4
    $@2 (51)
        on left: 5
        on right: 6
    translation_unit <std::vector<abstract_astnode*>> (52)
        on left: 7 8 9 10
        on right: 4 9 10
    struct_specifier <abstract_astnode*> (53)
        on left: 12
        on right: 7 9
    $@3 (54)
        on left: 11
        on right: 12
    function_definition <statement_astnode*> (55)
        on left: 13
        on right: 8 10
    type_specifier <typespec_astnode> (56)
        on left: 14 15 16
        on right: 13 22 103
    fun_declarator <fundeclarator_astnode*> (57)
        on left: 18 19
        on right: 13
    $@4 (58)
        on left: 17
        on right: 18
    parameter_list <std::vector<typespec_astnode>> (59)
        on left: 20 21
        on right: 18 21
    parameter_declaration <typespec_astnode> (60)
        on left: 22
        on right: 20 21
    declarator_arr <typespec_astnode> (61)
        on left: 23 24
        on right: 24 25
    declarator <typespec_astnode> (62)
        on left: 25 26
        on right: 22 26 104 105
    compound_statement <std::vector<statement_astnode*>> (63)
        on left: 27 28 29 30
        on right: 6 13
    statement_list <std::vector<statement_astnode*>> (64)
        on left: 31 32
        on right: 28 30 32 34
    statement <statement_astnode*> (65)
        on left: 33 34 35 36 37 38 39 40
        on right: 31 32 90 94 100
    printf_call <funcall_astnode*> (66)
        on left: 41 42
        on right: 39
    assignment_expression <assignE_astnode*> (67)
        on left: 43
        on right: 44 100
    assignment_statement <statement_astnode*> (68)
        on left: 44
        on right: 37
    procedure_call <funcall_astnode*> (69)
        on left: 45 46
        on right: 38
    expression <exp_astnode*> (70)
        on left: 47 48
        on right: 40 43 48 70 79 80 81 90 94 100
    mnterm <mnt*> (71)
        on left: 49
        on right: 48 52 94 100
    ifgotocoder <op_binary_astnode*> (72)
        on left: 50
        on right: 51 52
    logical_and_expression <op_binary_astnode*> (73)
        on left: 51 52
        on right: 47 48 52
    equality_expression <op_binary_astnode*> (74)
        on left: 53 54 55
        on right: 50 54 55
    relational_expression <op_binary_astnode*> (75)
        on left: 56 57 58 59 60
        on right: 53 54 55 57 58 59 60
    additive_expression <op_binary_astnode*> (76)
        on left: 61 62 63
        on right: 56 57 58 59 60 62 63
    unary_expression <exp_astnode*> (77)
        on left: 64 65
        on right: 43 65 66 67 68
    multiplicative_expression <op_binary_astnode*> (78)
        on left: 66 67 68
        on right: 61 62 63 67 68
    postfix_expression <exp_astnode*> (79)
        on left: 69 70 71 72 73 74 75
        on right: 64 70 73 74 75
    primary_expression <exp_astnode*> (80)
        on left: 76 77 78 79
        on right: 69
    expression_list <std::vector<exp_astnode*>> (81)
        on left: 80 81
        on right: 42 46 72 81
    unary_operator <std::string> (82)
        on left: 82 83 84 85
        on right: 65
    selection_statement <statement_astnode*> (83)
        on left: 90
        on right: 35
    $@5 (84)
        on left: 86
        on right: 90
    $@6 (85)
        on left: 87
        on right: 90
    $@7 (86)
        on left: 88
        on right: 90
    $@8 (87)
        on left: 89
        on right: 90
    iteration_statement <statement_astnode*> (88)
        on left: 94 100
        on right: 36
    $@9 (89)
        on left: 91
        on right: 94
    $@10 (90)
        on left: 92
        on right: 94
    $@11 (91)
        on left: 93
        on right: 94
    $@12 (92)
        on left: 95
        on right: 100
    $@13 (93)
        on left: 96
        on right: 100
    $@14 (94)
        on left: 97
        on right: 100
    $@15 (95)
        on left: 98
        on right: 100
    $@16 (96)
        on left: 99
        on right: 100
    declaration_list <abstract_astnode*> (97)
        on left: 101 102
        on right: 12 29 30 102
    declaration <typespec_astnode> (98)
        on left: 103
        on right: 101 102
    declarator_list <typespec_astnode> (99)
        on left: 104 105
        on right: 103 105


State 0

    0 $accept: • begin_nterm $end

    $default  reduce using rule 1 ($@1)

    begin_nterm  go to state 1
    $@1          go to state 2


State 1

    0 $accept: begin_nterm • $end

    $end  shift, and go to state 3


State 2

    2 begin_nterm: $@1 • program

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    STRUCT  shift, and go to state 6

    program              go to state 7
    main_definition      go to state 8
    translation_unit     go to state 9
    struct_specifier     go to state 10
    function_definition  go to state 11
    type_specifier       go to state 12


State 3

    0 $accept: begin_nterm $end •

    $default  accept


State 4

   14 type_specifier: VOID •

    $default  reduce using rule 14 (type_specifier)


State 5

    6 main_definition: INT • MAIN '(' ')' $@2 compound_statement
   15 type_specifier: INT •

    MAIN  shift, and go to state 13

    $default  reduce using rule 15 (type_specifier)


State 6

   12 struct_specifier: STRUCT • IDENTIFIER $@3 '{' declaration_list '}' ';'
   16 type_specifier: STRUCT • IDENTIFIER

    IDENTIFIER  shift, and go to state 14


State 7

    2 begin_nterm: $@1 program •

    $default  reduce using rule 2 (begin_nterm)


State 8

    3 program: main_definition •

    $default  reduce using rule 3 (program)


State 9

    4 program: translation_unit • main_definition
    9 translation_unit: translation_unit • struct_specifier
   10                 | translation_unit • function_definition

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    STRUCT  shift, and go to state 6

    main_definition      go to state 15
    struct_specifier     go to state 16
    function_definition  go to state 17
    type_specifier       go to state 12


State 10

    7 translation_unit: struct_specifier •

    $default  reduce using rule 7 (translation_unit)


State 11

    8 translation_unit: function_definition •

    $default  reduce using rule 8 (translation_unit)


State 12

   13 function_definition: type_specifier • fun_declarator compound_statement

    IDENTIFIER  shift, and go to state 18

    fun_declarator  go to state 19


State 13

    6 main_definition: INT MAIN • '(' ')' $@2 compound_statement

    '('  shift, and go to state 20


State 14

   12 struct_specifier: STRUCT IDENTIFIER • $@3 '{' declaration_list '}' ';'
   16 type_specifier: STRUCT IDENTIFIER •

    IDENTIFIER  reduce using rule 16 (type_specifier)
    $default    reduce using rule 11 ($@3)

    $@3  go to state 21


State 15

    4 program: translation_unit main_definition •

    $default  reduce using rule 4 (program)


State 16

    9 translation_unit: translation_unit struct_specifier •

    $default  reduce using rule 9 (translation_unit)


State 17

   10 translation_unit: translation_unit function_definition •

    $default  reduce using rule 10 (translation_unit)


State 18

   18 fun_declarator: IDENTIFIER • '(' $@4 parameter_list ')'
   19               | IDENTIFIER • '(' ')'

    '('  shift, and go to state 22


State 19

   13 function_definition: type_specifier fun_declarator • compound_statement

    '{'  shift, and go to state 23

    compound_statement  go to state 24


State 20

    6 main_definition: INT MAIN '(' • ')' $@2 compound_statement

    ')'  shift, and go to state 25


State 21

   12 struct_specifier: STRUCT IDENTIFIER $@3 • '{' declaration_list '}' ';'

    '{'  shift, and go to state 26


State 22

   18 fun_declarator: IDENTIFIER '(' • $@4 parameter_list ')'
   19               | IDENTIFIER '(' • ')'

    ')'  shift, and go to state 27

    $default  reduce using rule 17 ($@4)

    $@4  go to state 28


State 23

   27 compound_statement: '{' • '}'
   28                   | '{' • statement_list '}'
   29                   | '{' • declaration_list '}'
   30                   | '{' • declaration_list statement_list '}'

    VOID            shift, and go to state 4
    INT             shift, and go to state 29
    STRUCT          shift, and go to state 30
    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '}'             shift, and go to state 43
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    type_specifier         go to state 47
    statement_list         go to state 48
    statement              go to state 49
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59
    declaration_list       go to state 60
    declaration            go to state 61


State 24

   13 function_definition: type_specifier fun_declarator compound_statement •

    $default  reduce using rule 13 (function_definition)


State 25

    6 main_definition: INT MAIN '(' ')' • $@2 compound_statement

    $default  reduce using rule 5 ($@2)

    $@2  go to state 62


State 26

   12 struct_specifier: STRUCT IDENTIFIER $@3 '{' • declaration_list '}' ';'

    VOID    shift, and go to state 4
    INT     shift, and go to state 29
    STRUCT  shift, and go to state 30

    type_specifier    go to state 47
    declaration_list  go to state 63
    declaration       go to state 61


State 27

   19 fun_declarator: IDENTIFIER '(' ')' •

    $default  reduce using rule 19 (fun_declarator)


State 28

   18 fun_declarator: IDENTIFIER '(' $@4 • parameter_list ')'

    VOID    shift, and go to state 4
    INT     shift, and go to state 29
    STRUCT  shift, and go to state 30

    type_specifier         go to state 64
    parameter_list         go to state 65
    parameter_declaration  go to state 66


State 29

   15 type_specifier: INT •

    $default  reduce using rule 15 (type_specifier)


State 30

   16 type_specifier: STRUCT • IDENTIFIER

    IDENTIFIER  shift, and go to state 67


State 31

   45 procedure_call: IDENTIFIER • '(' ')' ';'
   46               | IDENTIFIER • '(' expression_list ')' ';'
   71 postfix_expression: IDENTIFIER • '(' ')'
   72                   | IDENTIFIER • '(' expression_list ')'
   76 primary_expression: IDENTIFIER •

    '('  shift, and go to state 68

    $default  reduce using rule 76 (primary_expression)


State 32

   77 primary_expression: INT_CONSTANT •

    $default  reduce using rule 77 (primary_expression)


State 33

   78 primary_expression: STRING_LITERAL •

    $default  reduce using rule 78 (primary_expression)


State 34

   90 selection_statement: IF • $@5 '(' expression ')' $@6 statement $@7 ELSE $@8 statement

    $default  reduce using rule 86 ($@5)

    $@5  go to state 69


State 35

   41 printf_call: PRINTF • '(' STRING_LITERAL ')' ';'
   42            | PRINTF • '(' STRING_LITERAL ',' expression_list ')' ';'

    '('  shift, and go to state 70


State 36

   94 iteration_statement: WHILE • $@9 mnterm '(' expression ')' $@10 mnterm $@11 statement

    $default  reduce using rule 91 ($@9)

    $@9  go to state 71


State 37

  100 iteration_statement: FOR • '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

    '('  shift, and go to state 72


State 38

   40 statement: RETURN • expression ';'

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 74
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 39

   82 unary_operator: '-' •

    $default  reduce using rule 82 (unary_operator)


State 40

   85 unary_operator: '*' •

    $default  reduce using rule 85 (unary_operator)


State 41

   79 primary_expression: '(' • expression ')'

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 82
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 42

   34 statement: '{' • statement_list '}'

    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    statement_list         go to state 83
    statement              go to state 49
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59


State 43

   27 compound_statement: '{' '}' •

    $default  reduce using rule 27 (compound_statement)


State 44

   83 unary_operator: '!' •

    $default  reduce using rule 83 (unary_operator)


State 45

   84 unary_operator: '&' •

    $default  reduce using rule 84 (unary_operator)


State 46

   33 statement: ';' •

    $default  reduce using rule 33 (statement)


State 47

  103 declaration: type_specifier • declarator_list ';'

    IDENTIFIER  shift, and go to state 84
    '*'         shift, and go to state 85

    declarator_arr   go to state 86
    declarator       go to state 87
    declarator_list  go to state 88


State 48

   28 compound_statement: '{' statement_list • '}'
   32 statement_list: statement_list • statement

    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '}'             shift, and go to state 89
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    statement              go to state 90
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59


State 49

   31 statement_list: statement •

    $default  reduce using rule 31 (statement_list)


State 50

   39 statement: printf_call •

    $default  reduce using rule 39 (statement)


State 51

   44 assignment_statement: assignment_expression • ';'

    ';'  shift, and go to state 91


State 52

   37 statement: assignment_statement •

    $default  reduce using rule 37 (statement)


State 53

   38 statement: procedure_call •

    $default  reduce using rule 38 (statement)


State 54

   43 assignment_expression: unary_expression • '=' expression

    '='  shift, and go to state 92


State 55

   64 unary_expression: postfix_expression •
   70 postfix_expression: postfix_expression • '[' expression ']'
   73                   | postfix_expression • '.' IDENTIFIER
   74                   | postfix_expression • PTR_OP IDENTIFIER
   75                   | postfix_expression • INC_OP

    INC_OP  shift, and go to state 93
    PTR_OP  shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96

    $default  reduce using rule 64 (unary_expression)


State 56

   69 postfix_expression: primary_expression •

    $default  reduce using rule 69 (postfix_expression)


State 57

   65 unary_expression: unary_operator • unary_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    unary_expression    go to state 97
    postfix_expression  go to state 55
    primary_expression  go to state 56
    unary_operator      go to state 57


State 58

   35 statement: selection_statement •

    $default  reduce using rule 35 (statement)


State 59

   36 statement: iteration_statement •

    $default  reduce using rule 36 (statement)


State 60

   29 compound_statement: '{' declaration_list • '}'
   30                   | '{' declaration_list • statement_list '}'
  102 declaration_list: declaration_list • declaration

    VOID            shift, and go to state 4
    INT             shift, and go to state 29
    STRUCT          shift, and go to state 30
    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '}'             shift, and go to state 98
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    type_specifier         go to state 47
    statement_list         go to state 99
    statement              go to state 49
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59
    declaration            go to state 100


State 61

  101 declaration_list: declaration •

    $default  reduce using rule 101 (declaration_list)


State 62

    6 main_definition: INT MAIN '(' ')' $@2 • compound_statement

    '{'  shift, and go to state 23

    compound_statement  go to state 101


State 63

   12 struct_specifier: STRUCT IDENTIFIER $@3 '{' declaration_list • '}' ';'
  102 declaration_list: declaration_list • declaration

    VOID    shift, and go to state 4
    INT     shift, and go to state 29
    STRUCT  shift, and go to state 30
    '}'     shift, and go to state 102

    type_specifier  go to state 47
    declaration     go to state 100


State 64

   22 parameter_declaration: type_specifier • declarator

    IDENTIFIER  shift, and go to state 84
    '*'         shift, and go to state 85

    declarator_arr  go to state 86
    declarator      go to state 103


State 65

   18 fun_declarator: IDENTIFIER '(' $@4 parameter_list • ')'
   21 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 104
    ','  shift, and go to state 105


State 66

   20 parameter_list: parameter_declaration •

    $default  reduce using rule 20 (parameter_list)


State 67

   16 type_specifier: STRUCT IDENTIFIER •

    $default  reduce using rule 16 (type_specifier)


State 68

   45 procedure_call: IDENTIFIER '(' • ')' ';'
   46               | IDENTIFIER '(' • expression_list ')' ';'
   71 postfix_expression: IDENTIFIER '(' • ')'
   72                   | IDENTIFIER '(' • expression_list ')'

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    ')'             shift, and go to state 106
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 107
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    expression_list            go to state 108
    unary_operator             go to state 57


State 69

   90 selection_statement: IF $@5 • '(' expression ')' $@6 statement $@7 ELSE $@8 statement

    '('  shift, and go to state 109


State 70

   41 printf_call: PRINTF '(' • STRING_LITERAL ')' ';'
   42            | PRINTF '(' • STRING_LITERAL ',' expression_list ')' ';'

    STRING_LITERAL  shift, and go to state 110


State 71

   94 iteration_statement: WHILE $@9 • mnterm '(' expression ')' $@10 mnterm $@11 statement

    $default  reduce using rule 49 (mnterm)

    mnterm  go to state 111


State 72

  100 iteration_statement: FOR '(' • assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    assignment_expression  go to state 112
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57


State 73

   71 postfix_expression: IDENTIFIER • '(' ')'
   72                   | IDENTIFIER • '(' expression_list ')'
   76 primary_expression: IDENTIFIER •

    '('  shift, and go to state 113

    $default  reduce using rule 76 (primary_expression)


State 74

   40 statement: RETURN expression • ';'
   48 expression: expression • OR_OP mnterm logical_and_expression

    OR_OP  shift, and go to state 114
    ';'    shift, and go to state 115


State 75

   51 logical_and_expression: ifgotocoder •

    $default  reduce using rule 51 (logical_and_expression)


State 76

   47 expression: logical_and_expression •
   52 logical_and_expression: logical_and_expression • AND_OP mnterm ifgotocoder

    AND_OP  shift, and go to state 116

    $default  reduce using rule 47 (expression)


State 77

   50 ifgotocoder: equality_expression •
   54 equality_expression: equality_expression • EQ_OP relational_expression
   55                    | equality_expression • NE_OP relational_expression

    EQ_OP  shift, and go to state 117
    NE_OP  shift, and go to state 118

    $default  reduce using rule 50 (ifgotocoder)


State 78

   53 equality_expression: relational_expression •
   57 relational_expression: relational_expression • '<' additive_expression
   58                      | relational_expression • '>' additive_expression
   59                      | relational_expression • LE_OP additive_expression
   60                      | relational_expression • GE_OP additive_expression

    LE_OP  shift, and go to state 119
    GE_OP  shift, and go to state 120
    '<'    shift, and go to state 121
    '>'    shift, and go to state 122

    $default  reduce using rule 53 (equality_expression)


State 79

   56 relational_expression: additive_expression •
   62 additive_expression: additive_expression • '+' multiplicative_expression
   63                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 123
    '-'  shift, and go to state 124

    $default  reduce using rule 56 (relational_expression)


State 80

   66 multiplicative_expression: unary_expression •

    $default  reduce using rule 66 (multiplicative_expression)


State 81

   61 additive_expression: multiplicative_expression •
   67 multiplicative_expression: multiplicative_expression • '*' unary_expression
   68                          | multiplicative_expression • '/' unary_expression

    '*'  shift, and go to state 125
    '/'  shift, and go to state 126

    $default  reduce using rule 61 (additive_expression)


State 82

   48 expression: expression • OR_OP mnterm logical_and_expression
   79 primary_expression: '(' expression • ')'

    OR_OP  shift, and go to state 114
    ')'    shift, and go to state 127


State 83

   32 statement_list: statement_list • statement
   34 statement: '{' statement_list • '}'

    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '}'             shift, and go to state 128
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    statement              go to state 90
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59


State 84

   23 declarator_arr: IDENTIFIER •

    $default  reduce using rule 23 (declarator_arr)


State 85

   26 declarator: '*' • declarator

    IDENTIFIER  shift, and go to state 84
    '*'         shift, and go to state 85

    declarator_arr  go to state 86
    declarator      go to state 129


State 86

   24 declarator_arr: declarator_arr • '[' INT_CONSTANT ']'
   25 declarator: declarator_arr •

    '['  shift, and go to state 130

    $default  reduce using rule 25 (declarator)


State 87

  104 declarator_list: declarator •

    $default  reduce using rule 104 (declarator_list)


State 88

  103 declaration: type_specifier declarator_list • ';'
  105 declarator_list: declarator_list • ',' declarator

    ','  shift, and go to state 131
    ';'  shift, and go to state 132


State 89

   28 compound_statement: '{' statement_list '}' •

    $default  reduce using rule 28 (compound_statement)


State 90

   32 statement_list: statement_list statement •

    $default  reduce using rule 32 (statement_list)


State 91

   44 assignment_statement: assignment_expression ';' •

    $default  reduce using rule 44 (assignment_statement)


State 92

   43 assignment_expression: unary_expression '=' • expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 133
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 93

   75 postfix_expression: postfix_expression INC_OP •

    $default  reduce using rule 75 (postfix_expression)


State 94

   74 postfix_expression: postfix_expression PTR_OP • IDENTIFIER

    IDENTIFIER  shift, and go to state 134


State 95

   70 postfix_expression: postfix_expression '[' • expression ']'

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 135
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 96

   73 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 136


State 97

   65 unary_expression: unary_operator unary_expression •

    $default  reduce using rule 65 (unary_expression)


State 98

   29 compound_statement: '{' declaration_list '}' •

    $default  reduce using rule 29 (compound_statement)


State 99

   30 compound_statement: '{' declaration_list statement_list • '}'
   32 statement_list: statement_list • statement

    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '}'             shift, and go to state 137
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    statement              go to state 90
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59


State 100

  102 declaration_list: declaration_list declaration •

    $default  reduce using rule 102 (declaration_list)


State 101

    6 main_definition: INT MAIN '(' ')' $@2 compound_statement •

    $default  reduce using rule 6 (main_definition)


State 102

   12 struct_specifier: STRUCT IDENTIFIER $@3 '{' declaration_list '}' • ';'

    ';'  shift, and go to state 138


State 103

   22 parameter_declaration: type_specifier declarator •

    $default  reduce using rule 22 (parameter_declaration)


State 104

   18 fun_declarator: IDENTIFIER '(' $@4 parameter_list ')' •

    $default  reduce using rule 18 (fun_declarator)


State 105

   21 parameter_list: parameter_list ',' • parameter_declaration

    VOID    shift, and go to state 4
    INT     shift, and go to state 29
    STRUCT  shift, and go to state 30

    type_specifier         go to state 64
    parameter_declaration  go to state 139


State 106

   45 procedure_call: IDENTIFIER '(' ')' • ';'
   71 postfix_expression: IDENTIFIER '(' ')' •

    ';'  shift, and go to state 140

    $default  reduce using rule 71 (postfix_expression)


State 107

   48 expression: expression • OR_OP mnterm logical_and_expression
   80 expression_list: expression •

    OR_OP  shift, and go to state 114

    $default  reduce using rule 80 (expression_list)


State 108

   46 procedure_call: IDENTIFIER '(' expression_list • ')' ';'
   72 postfix_expression: IDENTIFIER '(' expression_list • ')'
   81 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 141
    ','  shift, and go to state 142


State 109

   90 selection_statement: IF $@5 '(' • expression ')' $@6 statement $@7 ELSE $@8 statement

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 143
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 110

   41 printf_call: PRINTF '(' STRING_LITERAL • ')' ';'
   42            | PRINTF '(' STRING_LITERAL • ',' expression_list ')' ';'

    ')'  shift, and go to state 144
    ','  shift, and go to state 145


State 111

   94 iteration_statement: WHILE $@9 mnterm • '(' expression ')' $@10 mnterm $@11 statement

    '('  shift, and go to state 146


State 112

  100 iteration_statement: FOR '(' assignment_expression • ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

    ';'  shift, and go to state 147


State 113

   71 postfix_expression: IDENTIFIER '(' • ')'
   72                   | IDENTIFIER '(' • expression_list ')'

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    ')'             shift, and go to state 148
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 107
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    expression_list            go to state 149
    unary_operator             go to state 57


State 114

   48 expression: expression OR_OP • mnterm logical_and_expression

    $default  reduce using rule 49 (mnterm)

    mnterm  go to state 150


State 115

   40 statement: RETURN expression ';' •

    $default  reduce using rule 40 (statement)


State 116

   52 logical_and_expression: logical_and_expression AND_OP • mnterm ifgotocoder

    $default  reduce using rule 49 (mnterm)

    mnterm  go to state 151


State 117

   54 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    relational_expression      go to state 152
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 118

   55 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    relational_expression      go to state 153
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 119

   59 relational_expression: relational_expression LE_OP • additive_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    additive_expression        go to state 154
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 120

   60 relational_expression: relational_expression GE_OP • additive_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    additive_expression        go to state 155
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 121

   57 relational_expression: relational_expression '<' • additive_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    additive_expression        go to state 156
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 122

   58 relational_expression: relational_expression '>' • additive_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    additive_expression        go to state 157
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 123

   62 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    unary_expression           go to state 80
    multiplicative_expression  go to state 158
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 124

   63 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    unary_expression           go to state 80
    multiplicative_expression  go to state 159
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 125

   67 multiplicative_expression: multiplicative_expression '*' • unary_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    unary_expression    go to state 160
    postfix_expression  go to state 55
    primary_expression  go to state 56
    unary_operator      go to state 57


State 126

   68 multiplicative_expression: multiplicative_expression '/' • unary_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    unary_expression    go to state 161
    postfix_expression  go to state 55
    primary_expression  go to state 56
    unary_operator      go to state 57


State 127

   79 primary_expression: '(' expression ')' •

    $default  reduce using rule 79 (primary_expression)


State 128

   34 statement: '{' statement_list '}' •

    $default  reduce using rule 34 (statement)


State 129

   26 declarator: '*' declarator •

    $default  reduce using rule 26 (declarator)


State 130

   24 declarator_arr: declarator_arr '[' • INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 162


State 131

  105 declarator_list: declarator_list ',' • declarator

    IDENTIFIER  shift, and go to state 84
    '*'         shift, and go to state 85

    declarator_arr  go to state 86
    declarator      go to state 163


State 132

  103 declaration: type_specifier declarator_list ';' •

    $default  reduce using rule 103 (declaration)


State 133

   43 assignment_expression: unary_expression '=' expression •
   48 expression: expression • OR_OP mnterm logical_and_expression

    OR_OP  shift, and go to state 114

    $default  reduce using rule 43 (assignment_expression)


State 134

   74 postfix_expression: postfix_expression PTR_OP IDENTIFIER •

    $default  reduce using rule 74 (postfix_expression)


State 135

   48 expression: expression • OR_OP mnterm logical_and_expression
   70 postfix_expression: postfix_expression '[' expression • ']'

    OR_OP  shift, and go to state 114
    ']'    shift, and go to state 164


State 136

   73 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 73 (postfix_expression)


State 137

   30 compound_statement: '{' declaration_list statement_list '}' •

    $default  reduce using rule 30 (compound_statement)


State 138

   12 struct_specifier: STRUCT IDENTIFIER $@3 '{' declaration_list '}' ';' •

    $default  reduce using rule 12 (struct_specifier)


State 139

   21 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 21 (parameter_list)


State 140

   45 procedure_call: IDENTIFIER '(' ')' ';' •

    $default  reduce using rule 45 (procedure_call)


State 141

   46 procedure_call: IDENTIFIER '(' expression_list ')' • ';'
   72 postfix_expression: IDENTIFIER '(' expression_list ')' •

    ';'  shift, and go to state 165

    $default  reduce using rule 72 (postfix_expression)


State 142

   81 expression_list: expression_list ',' • expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 166
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 143

   48 expression: expression • OR_OP mnterm logical_and_expression
   90 selection_statement: IF $@5 '(' expression • ')' $@6 statement $@7 ELSE $@8 statement

    OR_OP  shift, and go to state 114
    ')'    shift, and go to state 167


State 144

   41 printf_call: PRINTF '(' STRING_LITERAL ')' • ';'

    ';'  shift, and go to state 168


State 145

   42 printf_call: PRINTF '(' STRING_LITERAL ',' • expression_list ')' ';'

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 107
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    expression_list            go to state 169
    unary_operator             go to state 57


State 146

   94 iteration_statement: WHILE $@9 mnterm '(' • expression ')' $@10 mnterm $@11 statement

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 170
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 147

  100 iteration_statement: FOR '(' assignment_expression ';' • $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

    $default  reduce using rule 95 ($@12)

    $@12  go to state 171


State 148

   71 postfix_expression: IDENTIFIER '(' ')' •

    $default  reduce using rule 71 (postfix_expression)


State 149

   72 postfix_expression: IDENTIFIER '(' expression_list • ')'
   81 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 172
    ','  shift, and go to state 142


State 150

   48 expression: expression OR_OP mnterm • logical_and_expression

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    ifgotocoder                go to state 75
    logical_and_expression     go to state 173
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 151

   52 logical_and_expression: logical_and_expression AND_OP mnterm • ifgotocoder

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    ifgotocoder                go to state 174
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 152

   54 equality_expression: equality_expression EQ_OP relational_expression •
   57 relational_expression: relational_expression • '<' additive_expression
   58                      | relational_expression • '>' additive_expression
   59                      | relational_expression • LE_OP additive_expression
   60                      | relational_expression • GE_OP additive_expression

    LE_OP  shift, and go to state 119
    GE_OP  shift, and go to state 120
    '<'    shift, and go to state 121
    '>'    shift, and go to state 122

    $default  reduce using rule 54 (equality_expression)


State 153

   55 equality_expression: equality_expression NE_OP relational_expression •
   57 relational_expression: relational_expression • '<' additive_expression
   58                      | relational_expression • '>' additive_expression
   59                      | relational_expression • LE_OP additive_expression
   60                      | relational_expression • GE_OP additive_expression

    LE_OP  shift, and go to state 119
    GE_OP  shift, and go to state 120
    '<'    shift, and go to state 121
    '>'    shift, and go to state 122

    $default  reduce using rule 55 (equality_expression)


State 154

   59 relational_expression: relational_expression LE_OP additive_expression •
   62 additive_expression: additive_expression • '+' multiplicative_expression
   63                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 123
    '-'  shift, and go to state 124

    $default  reduce using rule 59 (relational_expression)


State 155

   60 relational_expression: relational_expression GE_OP additive_expression •
   62 additive_expression: additive_expression • '+' multiplicative_expression
   63                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 123
    '-'  shift, and go to state 124

    $default  reduce using rule 60 (relational_expression)


State 156

   57 relational_expression: relational_expression '<' additive_expression •
   62 additive_expression: additive_expression • '+' multiplicative_expression
   63                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 123
    '-'  shift, and go to state 124

    $default  reduce using rule 57 (relational_expression)


State 157

   58 relational_expression: relational_expression '>' additive_expression •
   62 additive_expression: additive_expression • '+' multiplicative_expression
   63                    | additive_expression • '-' multiplicative_expression

    '+'  shift, and go to state 123
    '-'  shift, and go to state 124

    $default  reduce using rule 58 (relational_expression)


State 158

   62 additive_expression: additive_expression '+' multiplicative_expression •
   67 multiplicative_expression: multiplicative_expression • '*' unary_expression
   68                          | multiplicative_expression • '/' unary_expression

    '*'  shift, and go to state 125
    '/'  shift, and go to state 126

    $default  reduce using rule 62 (additive_expression)


State 159

   63 additive_expression: additive_expression '-' multiplicative_expression •
   67 multiplicative_expression: multiplicative_expression • '*' unary_expression
   68                          | multiplicative_expression • '/' unary_expression

    '*'  shift, and go to state 125
    '/'  shift, and go to state 126

    $default  reduce using rule 63 (additive_expression)


State 160

   67 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $default  reduce using rule 67 (multiplicative_expression)


State 161

   68 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $default  reduce using rule 68 (multiplicative_expression)


State 162

   24 declarator_arr: declarator_arr '[' INT_CONSTANT • ']'

    ']'  shift, and go to state 175


State 163

  105 declarator_list: declarator_list ',' declarator •

    $default  reduce using rule 105 (declarator_list)


State 164

   70 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 70 (postfix_expression)


State 165

   46 procedure_call: IDENTIFIER '(' expression_list ')' ';' •

    $default  reduce using rule 46 (procedure_call)


State 166

   48 expression: expression • OR_OP mnterm logical_and_expression
   81 expression_list: expression_list ',' expression •

    OR_OP  shift, and go to state 114

    $default  reduce using rule 81 (expression_list)


State 167

   90 selection_statement: IF $@5 '(' expression ')' • $@6 statement $@7 ELSE $@8 statement

    $default  reduce using rule 87 ($@6)

    $@6  go to state 176


State 168

   41 printf_call: PRINTF '(' STRING_LITERAL ')' ';' •

    $default  reduce using rule 41 (printf_call)


State 169

   42 printf_call: PRINTF '(' STRING_LITERAL ',' expression_list • ')' ';'
   81 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 177
    ','  shift, and go to state 142


State 170

   48 expression: expression • OR_OP mnterm logical_and_expression
   94 iteration_statement: WHILE $@9 mnterm '(' expression • ')' $@10 mnterm $@11 statement

    OR_OP  shift, and go to state 114
    ')'    shift, and go to state 178


State 171

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 • mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

    $default  reduce using rule 49 (mnterm)

    mnterm  go to state 179


State 172

   72 postfix_expression: IDENTIFIER '(' expression_list ')' •

    $default  reduce using rule 72 (postfix_expression)


State 173

   48 expression: expression OR_OP mnterm logical_and_expression •
   52 logical_and_expression: logical_and_expression • AND_OP mnterm ifgotocoder

    AND_OP  shift, and go to state 116

    $default  reduce using rule 48 (expression)


State 174

   52 logical_and_expression: logical_and_expression AND_OP mnterm ifgotocoder •

    $default  reduce using rule 52 (logical_and_expression)


State 175

   24 declarator_arr: declarator_arr '[' INT_CONSTANT ']' •

    $default  reduce using rule 24 (declarator_arr)


State 176

   90 selection_statement: IF $@5 '(' expression ')' $@6 • statement $@7 ELSE $@8 statement

    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    statement              go to state 180
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59


State 177

   42 printf_call: PRINTF '(' STRING_LITERAL ',' expression_list ')' • ';'

    ';'  shift, and go to state 181


State 178

   94 iteration_statement: WHILE $@9 mnterm '(' expression ')' • $@10 mnterm $@11 statement

    $default  reduce using rule 92 ($@10)

    $@10  go to state 182


State 179

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm • expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    expression                 go to state 183
    ifgotocoder                go to state 75
    logical_and_expression     go to state 76
    equality_expression        go to state 77
    relational_expression      go to state 78
    additive_expression        go to state 79
    unary_expression           go to state 80
    multiplicative_expression  go to state 81
    postfix_expression         go to state 55
    primary_expression         go to state 56
    unary_operator             go to state 57


State 180

   90 selection_statement: IF $@5 '(' expression ')' $@6 statement • $@7 ELSE $@8 statement

    $default  reduce using rule 88 ($@7)

    $@7  go to state 184


State 181

   42 printf_call: PRINTF '(' STRING_LITERAL ',' expression_list ')' ';' •

    $default  reduce using rule 42 (printf_call)


State 182

   94 iteration_statement: WHILE $@9 mnterm '(' expression ')' $@10 • mnterm $@11 statement

    $default  reduce using rule 49 (mnterm)

    mnterm  go to state 185


State 183

   48 expression: expression • OR_OP mnterm logical_and_expression
  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression • $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

    OR_OP  shift, and go to state 114

    $default  reduce using rule 96 ($@13)

    $@13  go to state 186


State 184

   90 selection_statement: IF $@5 '(' expression ')' $@6 statement $@7 • ELSE $@8 statement

    ELSE  shift, and go to state 187


State 185

   94 iteration_statement: WHILE $@9 mnterm '(' expression ')' $@10 mnterm • $@11 statement

    $default  reduce using rule 93 ($@11)

    $@11  go to state 188


State 186

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 • mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

    $default  reduce using rule 49 (mnterm)

    mnterm  go to state 189


State 187

   90 selection_statement: IF $@5 '(' expression ')' $@6 statement $@7 ELSE • $@8 statement

    $default  reduce using rule 89 ($@8)

    $@8  go to state 190


State 188

   94 iteration_statement: WHILE $@9 mnterm '(' expression ')' $@10 mnterm $@11 • statement

    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    statement              go to state 191
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59


State 189

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm • $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement

    $default  reduce using rule 97 ($@14)

    $@14  go to state 192


State 190

   90 selection_statement: IF $@5 '(' expression ')' $@6 statement $@7 ELSE $@8 • statement

    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    statement              go to state 193
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59


State 191

   94 iteration_statement: WHILE $@9 mnterm '(' expression ')' $@10 mnterm $@11 statement •

    $default  reduce using rule 94 (iteration_statement)


State 192

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 • ';' assignment_expression ')' $@15 mnterm $@16 statement

    ';'  shift, and go to state 194


State 193

   90 selection_statement: IF $@5 '(' expression ')' $@6 statement $@7 ELSE $@8 statement •

    $default  reduce using rule 90 (selection_statement)


State 194

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' • assignment_expression ')' $@15 mnterm $@16 statement

    IDENTIFIER      shift, and go to state 73
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45

    assignment_expression  go to state 195
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57


State 195

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression • ')' $@15 mnterm $@16 statement

    ')'  shift, and go to state 196


State 196

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' • $@15 mnterm $@16 statement

    $default  reduce using rule 98 ($@15)

    $@15  go to state 197


State 197

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 • mnterm $@16 statement

    $default  reduce using rule 49 (mnterm)

    mnterm  go to state 198


State 198

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm • $@16 statement

    $default  reduce using rule 99 ($@16)

    $@16  go to state 199


State 199

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 • statement

    IDENTIFIER      shift, and go to state 31
    INT_CONSTANT    shift, and go to state 32
    STRING_LITERAL  shift, and go to state 33
    IF              shift, and go to state 34
    PRINTF          shift, and go to state 35
    WHILE           shift, and go to state 36
    FOR             shift, and go to state 37
    RETURN          shift, and go to state 38
    '-'             shift, and go to state 39
    '*'             shift, and go to state 40
    '('             shift, and go to state 41
    '{'             shift, and go to state 42
    '!'             shift, and go to state 44
    '&'             shift, and go to state 45
    ';'             shift, and go to state 46

    statement              go to state 200
    printf_call            go to state 50
    assignment_expression  go to state 51
    assignment_statement   go to state 52
    procedure_call         go to state 53
    unary_expression       go to state 54
    postfix_expression     go to state 55
    primary_expression     go to state 56
    unary_operator         go to state 57
    selection_statement    go to state 58
    iteration_statement    go to state 59


State 200

  100 iteration_statement: FOR '(' assignment_expression ';' $@12 mnterm expression $@13 mnterm $@14 ';' assignment_expression ')' $@15 mnterm $@16 statement •

    $default  reduce using rule 100 (iteration_statement)
