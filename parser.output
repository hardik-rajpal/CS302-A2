Terminals unused in grammar

    OTHERS
    '\n'


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: struct_specifier
    2                 | function_definition
    3                 | translation_unit struct_specifier
    4                 | translation_unit function_definition

    5 struct_specifier: STRUCT IDENTIFIER '{' declaration_list '}' ';'

    6 function_definition: type_specifier fun_declarator compound_statement

    7 type_specifier: VOID
    8               | INT
    9               | FLOAT
   10               | STRUCT IDENTIFIER

   11 fun_declarator: IDENTIFIER '(' parameter_list ')'
   12               | IDENTIFIER '(' ')'

   13 parameter_list: parameter_declaration
   14               | parameter_list ',' parameter_declaration

   15 parameter_declaration: type_specifier declarator

   16 declarator_arr: IDENTIFIER
   17               | declarator_arr '[' INT_CONSTANT ']'

   18 declarator: declarator_arr
   19           | '*' declarator

   20 compound_statement: '{' '}'
   21                   | '{' statement_list '}'
   22                   | '{' declaration_list '}'
   23                   | '{' declaration_list statement_list '}'

   24 statement_list: statement
   25               | statement_list statement

   26 statement: ';'
   27          | '{' statement_list '}'
   28          | selection_statement
   29          | iteration_statement
   30          | assignment_statement
   31          | procedure_call
   32          | RETURN expression ';'

   33 assignment_expression: unary_expression '=' expression

   34 assignment_statement: assignment_expression ';'

   35 procedure_call: IDENTIFIER '(' ')' ';'
   36               | IDENTIFIER '(' expression_list ')' ';'

   37 expression: logical_and_expression
   38           | expression OR_OP logical_and_expression

   39 logical_and_expression: equality_expression
   40                       | logical_and_expression AND_OP equality_expression

   41 equality_expression: relational_expression
   42                    | equality_expression EQ_OP relational_expression
   43                    | equality_expression NE_OP relational_expression

   44 relational_expression: additive_expression
   45                      | relational_expression '<' additive_expression
   46                      | relational_expression '>' additive_expression
   47                      | relational_expression LE_OP additive_expression
   48                      | relational_expression GE_OP additive_expression

   49 additive_expression: multiplicative_expression
   50                    | additive_expression '+' multiplicative_expression
   51                    | additive_expression '-' multiplicative_expression

   52 unary_expression: postfix_expression
   53                 | unary_operator unary_expression

   54 multiplicative_expression: unary_expression
   55                          | multiplicative_expression '*' unary_expression
   56                          | multiplicative_expression '/' unary_expression

   57 postfix_expression: primary_expression
   58                   | postfix_expression '[' expression ']'
   59                   | IDENTIFIER '(' ')'
   60                   | IDENTIFIER '(' expression_list ')'
   61                   | postfix_expression '.' IDENTIFIER
   62                   | postfix_expression PTR_OP IDENTIFIER
   63                   | postfix_expression INC_OP

   64 primary_expression: IDENTIFIER
   65                   | INT_CONSTANT
   66                   | FLOAT_CONSTANT
   67                   | STRING_LITERAL
   68                   | '(' expression ')'

   69 expression_list: expression
   70                | expression_list ',' expression

   71 unary_operator: '-'
   72               | '!'
   73               | '&'
   74               | '*'

   75 selection_statement: IF '(' expression ')' statement ELSE statement

   76 iteration_statement: WHILE '(' expression ')' statement
   77                    | FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement

   78 declaration_list: declaration
   79                 | declaration_list declaration

   80 declaration: type_specifier declarator_list ';'

   81 declarator_list: declarator
   82                | declarator_list ',' declarator


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10)
    '!' (33) 72
    '&' (38) 73
    '(' (40) 11 12 35 36 59 60 68 75 76 77
    ')' (41) 11 12 35 36 59 60 68 75 76 77
    '*' (42) 19 55 74
    '+' (43) 50
    ',' (44) 14 70 82
    '-' (45) 51 71
    '.' (46) 61
    '/' (47) 56
    ';' (59) 5 26 32 34 35 36 77 80
    '<' (60) 45
    '=' (61) 33
    '>' (62) 46
    '[' (91) 17 58
    ']' (93) 17 58
    '{' (123) 5 20 21 22 23 27
    '}' (125) 5 20 21 22 23 27
    error (256)
    VOID <std::string> (258) 7
    INT <std::string> (259) 8
    FLOAT <std::string> (260) 9
    STRUCT <std::string> (261) 5 10
    IDENTIFIER <std::string> (262) 5 10 11 12 16 35 36 59 60 61 62 64
    INT_CONSTANT <std::string> (263) 17 65
    FLOAT_CONSTANT <std::string> (264) 66
    STRING_LITERAL <std::string> (265) 67
    OR_OP <std::string> (266) 38
    AND_OP <std::string> (267) 40
    EQ_OP <std::string> (268) 42
    NE_OP <std::string> (269) 43
    LE_OP <std::string> (270) 47
    GE_OP <std::string> (271) 48
    INC_OP <std::string> (272) 63
    PTR_OP <std::string> (273) 62
    IF <std::string> (274) 75
    ELSE <std::string> (275) 75
    WHILE <std::string> (276) 76
    FOR <std::string> (277) 77
    RETURN <std::string> (278) 32
    OTHERS <std::string> (279)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    translation_unit <abstract_astnode*> (45)
        on left: 1 2 3 4
        on right: 0 3 4
    struct_specifier <abstract_astnode*> (46)
        on left: 5
        on right: 1 3
    function_definition <abstract_astnode*> (47)
        on left: 6
        on right: 2 4
    fun_declarator <abstract_astnode*> (48)
        on left: 11 12
        on right: 6
    parameter_list <abstract_astnode*> (49)
        on left: 13 14
        on right: 11 14
    parameter_declaration <abstract_astnode*> (50)
        on left: 15
        on right: 13 14
    declarator_arr <abstract_astnode*> (51)
        on left: 16 17
        on right: 17 18
    declarator <abstract_astnode*> (52)
        on left: 18 19
        on right: 15 19 81 82
    compound_statement <abstract_astnode*> (53)
        on left: 20 21 22 23
        on right: 6
    statement_list <abstract_astnode*> (54)
        on left: 24 25
        on right: 21 23 25 27
    statement <abstract_astnode*> (55)
        on left: 26 27 28 29 30 31 32
        on right: 24 25 75 76 77
    assignment_expression <abstract_astnode*> (56)
        on left: 33
        on right: 34 77
    assignment_statement <abstract_astnode*> (57)
        on left: 34
        on right: 30
    procedure_call <abstract_astnode*> (58)
        on left: 35 36
        on right: 31
    expression <abstract_astnode*> (59)
        on left: 37 38
        on right: 32 33 38 58 68 69 70 75 76 77
    logical_and_expression <abstract_astnode*> (60)
        on left: 39 40
        on right: 37 38 40
    equality_expression <abstract_astnode*> (61)
        on left: 41 42 43
        on right: 39 40 42 43
    relational_expression <abstract_astnode*> (62)
        on left: 44 45 46 47 48
        on right: 41 42 43 45 46 47 48
    additive_expression <abstract_astnode*> (63)
        on left: 49 50 51
        on right: 44 45 46 47 48 50 51
    unary_expression <abstract_astnode*> (64)
        on left: 52 53
        on right: 33 53 54 55 56
    multiplicative_expression <abstract_astnode*> (65)
        on left: 54 55 56
        on right: 49 50 51 55 56
    postfix_expression <abstract_astnode*> (66)
        on left: 57 58 59 60 61 62 63
        on right: 52 58 61 62 63
    primary_expression <abstract_astnode*> (67)
        on left: 64 65 66 67 68
        on right: 57
    expression_list <abstract_astnode*> (68)
        on left: 69 70
        on right: 36 60 70
    unary_operator <abstract_astnode*> (69)
        on left: 71 72 73 74
        on right: 53
    selection_statement <abstract_astnode*> (70)
        on left: 75
        on right: 28
    iteration_statement <abstract_astnode*> (71)
        on left: 76 77
        on right: 29
    declaration_list <abstract_astnode*> (72)
        on left: 78 79
        on right: 5 22 23 79
    declaration <abstract_astnode*> (73)
        on left: 80
        on right: 78 79
    declarator_list <abstract_astnode*> (74)
        on left: 81 82
        on right: 80 82
    type_specifier <std::string> (75)
        on left: 7 8 9 10
        on right: 6 15 80


State 0

    0 $accept: . translation_unit $end

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    translation_unit     go to state 5
    struct_specifier     go to state 6
    function_definition  go to state 7
    type_specifier       go to state 8


State 1

    7 type_specifier: VOID .

    $default  reduce using rule 7 (type_specifier)


State 2

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


State 3

    9 type_specifier: FLOAT .

    $default  reduce using rule 9 (type_specifier)


State 4

    5 struct_specifier: STRUCT . IDENTIFIER '{' declaration_list '}' ';'
   10 type_specifier: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 9


State 5

    0 $accept: translation_unit . $end
    3 translation_unit: translation_unit . struct_specifier
    4                 | translation_unit . function_definition

    $end    shift, and go to state 10
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    struct_specifier     go to state 11
    function_definition  go to state 12
    type_specifier       go to state 8


State 6

    1 translation_unit: struct_specifier .

    $default  reduce using rule 1 (translation_unit)


State 7

    2 translation_unit: function_definition .

    $default  reduce using rule 2 (translation_unit)


State 8

    6 function_definition: type_specifier . fun_declarator compound_statement

    IDENTIFIER  shift, and go to state 13

    fun_declarator  go to state 14


State 9

    5 struct_specifier: STRUCT IDENTIFIER . '{' declaration_list '}' ';'
   10 type_specifier: STRUCT IDENTIFIER .

    '{'  shift, and go to state 15

    $default  reduce using rule 10 (type_specifier)


State 10

    0 $accept: translation_unit $end .

    $default  accept


State 11

    3 translation_unit: translation_unit struct_specifier .

    $default  reduce using rule 3 (translation_unit)


State 12

    4 translation_unit: translation_unit function_definition .

    $default  reduce using rule 4 (translation_unit)


State 13

   11 fun_declarator: IDENTIFIER . '(' parameter_list ')'
   12               | IDENTIFIER . '(' ')'

    '('  shift, and go to state 16


State 14

    6 function_definition: type_specifier fun_declarator . compound_statement

    '{'  shift, and go to state 17

    compound_statement  go to state 18


State 15

    5 struct_specifier: STRUCT IDENTIFIER '{' . declaration_list '}' ';'

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 19

    declaration_list  go to state 20
    declaration       go to state 21
    type_specifier    go to state 22


State 16

   11 fun_declarator: IDENTIFIER '(' . parameter_list ')'
   12               | IDENTIFIER '(' . ')'

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 19
    ')'     shift, and go to state 23

    parameter_list         go to state 24
    parameter_declaration  go to state 25
    type_specifier         go to state 26


State 17

   20 compound_statement: '{' . '}'
   21                   | '{' . statement_list '}'
   22                   | '{' . declaration_list '}'
   23                   | '{' . declaration_list statement_list '}'

    VOID            shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    STRUCT          shift, and go to state 19
    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 39
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement_list         go to state 43
    statement              go to state 44
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    declaration_list       go to state 54
    declaration            go to state 21
    type_specifier         go to state 22


State 18

    6 function_definition: type_specifier fun_declarator compound_statement .

    $default  reduce using rule 6 (function_definition)


State 19

   10 type_specifier: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 55


State 20

    5 struct_specifier: STRUCT IDENTIFIER '{' declaration_list . '}' ';'
   79 declaration_list: declaration_list . declaration

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 19
    '}'     shift, and go to state 56

    declaration     go to state 57
    type_specifier  go to state 22


State 21

   78 declaration_list: declaration .

    $default  reduce using rule 78 (declaration_list)


State 22

   80 declaration: type_specifier . declarator_list ';'

    IDENTIFIER  shift, and go to state 58
    '*'         shift, and go to state 59

    declarator_arr   go to state 60
    declarator       go to state 61
    declarator_list  go to state 62


State 23

   12 fun_declarator: IDENTIFIER '(' ')' .

    $default  reduce using rule 12 (fun_declarator)


State 24

   11 fun_declarator: IDENTIFIER '(' parameter_list . ')'
   14 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 63
    ','  shift, and go to state 64


State 25

   13 parameter_list: parameter_declaration .

    $default  reduce using rule 13 (parameter_list)


State 26

   15 parameter_declaration: type_specifier . declarator

    IDENTIFIER  shift, and go to state 58
    '*'         shift, and go to state 59

    declarator_arr  go to state 60
    declarator      go to state 65


State 27

   35 procedure_call: IDENTIFIER . '(' ')' ';'
   36               | IDENTIFIER . '(' expression_list ')' ';'
   59 postfix_expression: IDENTIFIER . '(' ')'
   60                   | IDENTIFIER . '(' expression_list ')'
   64 primary_expression: IDENTIFIER .

    '('  shift, and go to state 66

    $default  reduce using rule 64 (primary_expression)


State 28

   65 primary_expression: INT_CONSTANT .

    $default  reduce using rule 65 (primary_expression)


State 29

   66 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 66 (primary_expression)


State 30

   67 primary_expression: STRING_LITERAL .

    $default  reduce using rule 67 (primary_expression)


State 31

   75 selection_statement: IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 67


State 32

   76 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 68


State 33

   77 iteration_statement: FOR . '(' assignment_expression ';' expression ';' assignment_expression ')' statement

    '('  shift, and go to state 69


State 34

   32 statement: RETURN . expression ';'

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 71
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 35

   71 unary_operator: '-' .

    $default  reduce using rule 71 (unary_operator)


State 36

   74 unary_operator: '*' .

    $default  reduce using rule 74 (unary_operator)


State 37

   68 primary_expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 78
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 38

   27 statement: '{' . statement_list '}'

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement_list         go to state 79
    statement              go to state 44
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53


State 39

   20 compound_statement: '{' '}' .

    $default  reduce using rule 20 (compound_statement)


State 40

   72 unary_operator: '!' .

    $default  reduce using rule 72 (unary_operator)


State 41

   73 unary_operator: '&' .

    $default  reduce using rule 73 (unary_operator)


State 42

   26 statement: ';' .

    $default  reduce using rule 26 (statement)


State 43

   21 compound_statement: '{' statement_list . '}'
   25 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 80
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement              go to state 81
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53


State 44

   24 statement_list: statement .

    $default  reduce using rule 24 (statement_list)


State 45

   34 assignment_statement: assignment_expression . ';'

    ';'  shift, and go to state 82


State 46

   30 statement: assignment_statement .

    $default  reduce using rule 30 (statement)


State 47

   31 statement: procedure_call .

    $default  reduce using rule 31 (statement)


State 48

   33 assignment_expression: unary_expression . '=' expression

    '='  shift, and go to state 83


State 49

   52 unary_expression: postfix_expression .
   58 postfix_expression: postfix_expression . '[' expression ']'
   61                   | postfix_expression . '.' IDENTIFIER
   62                   | postfix_expression . PTR_OP IDENTIFIER
   63                   | postfix_expression . INC_OP

    INC_OP  shift, and go to state 84
    PTR_OP  shift, and go to state 85
    '['     shift, and go to state 86
    '.'     shift, and go to state 87

    $default  reduce using rule 52 (unary_expression)


State 50

   57 postfix_expression: primary_expression .

    $default  reduce using rule 57 (postfix_expression)


State 51

   53 unary_expression: unary_operator . unary_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression    go to state 88
    postfix_expression  go to state 49
    primary_expression  go to state 50
    unary_operator      go to state 51


State 52

   28 statement: selection_statement .

    $default  reduce using rule 28 (statement)


State 53

   29 statement: iteration_statement .

    $default  reduce using rule 29 (statement)


State 54

   22 compound_statement: '{' declaration_list . '}'
   23                   | '{' declaration_list . statement_list '}'
   79 declaration_list: declaration_list . declaration

    VOID            shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    STRUCT          shift, and go to state 19
    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 89
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement_list         go to state 90
    statement              go to state 44
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    declaration            go to state 57
    type_specifier         go to state 22


State 55

   10 type_specifier: STRUCT IDENTIFIER .

    $default  reduce using rule 10 (type_specifier)


State 56

    5 struct_specifier: STRUCT IDENTIFIER '{' declaration_list '}' . ';'

    ';'  shift, and go to state 91


State 57

   79 declaration_list: declaration_list declaration .

    $default  reduce using rule 79 (declaration_list)


State 58

   16 declarator_arr: IDENTIFIER .

    $default  reduce using rule 16 (declarator_arr)


State 59

   19 declarator: '*' . declarator

    IDENTIFIER  shift, and go to state 58
    '*'         shift, and go to state 59

    declarator_arr  go to state 60
    declarator      go to state 92


State 60

   17 declarator_arr: declarator_arr . '[' INT_CONSTANT ']'
   18 declarator: declarator_arr .

    '['  shift, and go to state 93

    $default  reduce using rule 18 (declarator)


State 61

   81 declarator_list: declarator .

    $default  reduce using rule 81 (declarator_list)


State 62

   80 declaration: type_specifier declarator_list . ';'
   82 declarator_list: declarator_list . ',' declarator

    ','  shift, and go to state 94
    ';'  shift, and go to state 95


State 63

   11 fun_declarator: IDENTIFIER '(' parameter_list ')' .

    $default  reduce using rule 11 (fun_declarator)


State 64

   14 parameter_list: parameter_list ',' . parameter_declaration

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 19

    parameter_declaration  go to state 96
    type_specifier         go to state 26


State 65

   15 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 15 (parameter_declaration)


State 66

   35 procedure_call: IDENTIFIER '(' . ')' ';'
   36               | IDENTIFIER '(' . expression_list ')' ';'
   59 postfix_expression: IDENTIFIER '(' . ')'
   60                   | IDENTIFIER '(' . expression_list ')'

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    ')'             shift, and go to state 97
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 98
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    expression_list            go to state 99
    unary_operator             go to state 51


State 67

   75 selection_statement: IF '(' . expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 100
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 68

   76 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 101
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 69

   77 iteration_statement: FOR '(' . assignment_expression ';' expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    assignment_expression  go to state 102
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51


State 70

   59 postfix_expression: IDENTIFIER . '(' ')'
   60                   | IDENTIFIER . '(' expression_list ')'
   64 primary_expression: IDENTIFIER .

    '('  shift, and go to state 103

    $default  reduce using rule 64 (primary_expression)


State 71

   32 statement: RETURN expression . ';'
   38 expression: expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 104
    ';'    shift, and go to state 105


State 72

   37 expression: logical_and_expression .
   40 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 106

    $default  reduce using rule 37 (expression)


State 73

   39 logical_and_expression: equality_expression .
   42 equality_expression: equality_expression . EQ_OP relational_expression
   43                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 107
    NE_OP  shift, and go to state 108

    $default  reduce using rule 39 (logical_and_expression)


State 74

   41 equality_expression: relational_expression .
   45 relational_expression: relational_expression . '<' additive_expression
   46                      | relational_expression . '>' additive_expression
   47                      | relational_expression . LE_OP additive_expression
   48                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 109
    GE_OP  shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112

    $default  reduce using rule 41 (equality_expression)


State 75

   44 relational_expression: additive_expression .
   50 additive_expression: additive_expression . '+' multiplicative_expression
   51                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 44 (relational_expression)


State 76

   54 multiplicative_expression: unary_expression .

    $default  reduce using rule 54 (multiplicative_expression)


State 77

   49 additive_expression: multiplicative_expression .
   55 multiplicative_expression: multiplicative_expression . '*' unary_expression
   56                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 49 (additive_expression)


State 78

   38 expression: expression . OR_OP logical_and_expression
   68 primary_expression: '(' expression . ')'

    OR_OP  shift, and go to state 104
    ')'    shift, and go to state 117


State 79

   25 statement_list: statement_list . statement
   27 statement: '{' statement_list . '}'

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 118
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement              go to state 81
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53


State 80

   21 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 21 (compound_statement)


State 81

   25 statement_list: statement_list statement .

    $default  reduce using rule 25 (statement_list)


State 82

   34 assignment_statement: assignment_expression ';' .

    $default  reduce using rule 34 (assignment_statement)


State 83

   33 assignment_expression: unary_expression '=' . expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 119
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 84

   63 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 63 (postfix_expression)


State 85

   62 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 120


State 86

   58 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 121
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 87

   61 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 122


State 88

   53 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 53 (unary_expression)


State 89

   22 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 22 (compound_statement)


State 90

   23 compound_statement: '{' declaration_list statement_list . '}'
   25 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '}'             shift, and go to state 123
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement              go to state 81
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53


State 91

    5 struct_specifier: STRUCT IDENTIFIER '{' declaration_list '}' ';' .

    $default  reduce using rule 5 (struct_specifier)


State 92

   19 declarator: '*' declarator .

    $default  reduce using rule 19 (declarator)


State 93

   17 declarator_arr: declarator_arr '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 124


State 94

   82 declarator_list: declarator_list ',' . declarator

    IDENTIFIER  shift, and go to state 58
    '*'         shift, and go to state 59

    declarator_arr  go to state 60
    declarator      go to state 125


State 95

   80 declaration: type_specifier declarator_list ';' .

    $default  reduce using rule 80 (declaration)


State 96

   14 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 14 (parameter_list)


State 97

   35 procedure_call: IDENTIFIER '(' ')' . ';'
   59 postfix_expression: IDENTIFIER '(' ')' .

    ';'  shift, and go to state 126

    $default  reduce using rule 59 (postfix_expression)


State 98

   38 expression: expression . OR_OP logical_and_expression
   69 expression_list: expression .

    OR_OP  shift, and go to state 104

    $default  reduce using rule 69 (expression_list)


State 99

   36 procedure_call: IDENTIFIER '(' expression_list . ')' ';'
   60 postfix_expression: IDENTIFIER '(' expression_list . ')'
   70 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 127
    ','  shift, and go to state 128


State 100

   38 expression: expression . OR_OP logical_and_expression
   75 selection_statement: IF '(' expression . ')' statement ELSE statement

    OR_OP  shift, and go to state 104
    ')'    shift, and go to state 129


State 101

   38 expression: expression . OR_OP logical_and_expression
   76 iteration_statement: WHILE '(' expression . ')' statement

    OR_OP  shift, and go to state 104
    ')'    shift, and go to state 130


State 102

   77 iteration_statement: FOR '(' assignment_expression . ';' expression ';' assignment_expression ')' statement

    ';'  shift, and go to state 131


State 103

   59 postfix_expression: IDENTIFIER '(' . ')'
   60                   | IDENTIFIER '(' . expression_list ')'

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    ')'             shift, and go to state 132
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 98
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    expression_list            go to state 133
    unary_operator             go to state 51


State 104

   38 expression: expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    logical_and_expression     go to state 134
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 105

   32 statement: RETURN expression ';' .

    $default  reduce using rule 32 (statement)


State 106

   40 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    equality_expression        go to state 135
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 107

   42 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    relational_expression      go to state 136
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 108

   43 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    relational_expression      go to state 137
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 109

   47 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    additive_expression        go to state 138
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 110

   48 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    additive_expression        go to state 139
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 111

   45 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    additive_expression        go to state 140
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 112

   46 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    additive_expression        go to state 141
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 113

   50 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression           go to state 76
    multiplicative_expression  go to state 142
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 114

   51 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression           go to state 76
    multiplicative_expression  go to state 143
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 115

   55 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression    go to state 144
    postfix_expression  go to state 49
    primary_expression  go to state 50
    unary_operator      go to state 51


State 116

   56 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    unary_expression    go to state 145
    postfix_expression  go to state 49
    primary_expression  go to state 50
    unary_operator      go to state 51


State 117

   68 primary_expression: '(' expression ')' .

    $default  reduce using rule 68 (primary_expression)


State 118

   27 statement: '{' statement_list '}' .

    $default  reduce using rule 27 (statement)


State 119

   33 assignment_expression: unary_expression '=' expression .
   38 expression: expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 104

    $default  reduce using rule 33 (assignment_expression)


State 120

   62 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 62 (postfix_expression)


State 121

   38 expression: expression . OR_OP logical_and_expression
   58 postfix_expression: postfix_expression '[' expression . ']'

    OR_OP  shift, and go to state 104
    ']'    shift, and go to state 146


State 122

   61 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 61 (postfix_expression)


State 123

   23 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 23 (compound_statement)


State 124

   17 declarator_arr: declarator_arr '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 147


State 125

   82 declarator_list: declarator_list ',' declarator .

    $default  reduce using rule 82 (declarator_list)


State 126

   35 procedure_call: IDENTIFIER '(' ')' ';' .

    $default  reduce using rule 35 (procedure_call)


State 127

   36 procedure_call: IDENTIFIER '(' expression_list ')' . ';'
   60 postfix_expression: IDENTIFIER '(' expression_list ')' .

    ';'  shift, and go to state 148

    $default  reduce using rule 60 (postfix_expression)


State 128

   70 expression_list: expression_list ',' . expression

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 149
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 129

   75 selection_statement: IF '(' expression ')' . statement ELSE statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement              go to state 150
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53


State 130

   76 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement              go to state 151
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53


State 131

   77 iteration_statement: FOR '(' assignment_expression ';' . expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    expression                 go to state 152
    logical_and_expression     go to state 72
    equality_expression        go to state 73
    relational_expression      go to state 74
    additive_expression        go to state 75
    unary_expression           go to state 76
    multiplicative_expression  go to state 77
    postfix_expression         go to state 49
    primary_expression         go to state 50
    unary_operator             go to state 51


State 132

   59 postfix_expression: IDENTIFIER '(' ')' .

    $default  reduce using rule 59 (postfix_expression)


State 133

   60 postfix_expression: IDENTIFIER '(' expression_list . ')'
   70 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 153
    ','  shift, and go to state 128


State 134

   38 expression: expression OR_OP logical_and_expression .
   40 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 106

    $default  reduce using rule 38 (expression)


State 135

   40 logical_and_expression: logical_and_expression AND_OP equality_expression .
   42 equality_expression: equality_expression . EQ_OP relational_expression
   43                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 107
    NE_OP  shift, and go to state 108

    $default  reduce using rule 40 (logical_and_expression)


State 136

   42 equality_expression: equality_expression EQ_OP relational_expression .
   45 relational_expression: relational_expression . '<' additive_expression
   46                      | relational_expression . '>' additive_expression
   47                      | relational_expression . LE_OP additive_expression
   48                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 109
    GE_OP  shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112

    $default  reduce using rule 42 (equality_expression)


State 137

   43 equality_expression: equality_expression NE_OP relational_expression .
   45 relational_expression: relational_expression . '<' additive_expression
   46                      | relational_expression . '>' additive_expression
   47                      | relational_expression . LE_OP additive_expression
   48                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 109
    GE_OP  shift, and go to state 110
    '<'    shift, and go to state 111
    '>'    shift, and go to state 112

    $default  reduce using rule 43 (equality_expression)


State 138

   47 relational_expression: relational_expression LE_OP additive_expression .
   50 additive_expression: additive_expression . '+' multiplicative_expression
   51                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 47 (relational_expression)


State 139

   48 relational_expression: relational_expression GE_OP additive_expression .
   50 additive_expression: additive_expression . '+' multiplicative_expression
   51                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 48 (relational_expression)


State 140

   45 relational_expression: relational_expression '<' additive_expression .
   50 additive_expression: additive_expression . '+' multiplicative_expression
   51                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 45 (relational_expression)


State 141

   46 relational_expression: relational_expression '>' additive_expression .
   50 additive_expression: additive_expression . '+' multiplicative_expression
   51                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 46 (relational_expression)


State 142

   50 additive_expression: additive_expression '+' multiplicative_expression .
   55 multiplicative_expression: multiplicative_expression . '*' unary_expression
   56                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 50 (additive_expression)


State 143

   51 additive_expression: additive_expression '-' multiplicative_expression .
   55 multiplicative_expression: multiplicative_expression . '*' unary_expression
   56                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116

    $default  reduce using rule 51 (additive_expression)


State 144

   55 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 55 (multiplicative_expression)


State 145

   56 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 56 (multiplicative_expression)


State 146

   58 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 58 (postfix_expression)


State 147

   17 declarator_arr: declarator_arr '[' INT_CONSTANT ']' .

    $default  reduce using rule 17 (declarator_arr)


State 148

   36 procedure_call: IDENTIFIER '(' expression_list ')' ';' .

    $default  reduce using rule 36 (procedure_call)


State 149

   38 expression: expression . OR_OP logical_and_expression
   70 expression_list: expression_list ',' expression .

    OR_OP  shift, and go to state 104

    $default  reduce using rule 70 (expression_list)


State 150

   75 selection_statement: IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 154


State 151

   76 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 76 (iteration_statement)


State 152

   38 expression: expression . OR_OP logical_and_expression
   77 iteration_statement: FOR '(' assignment_expression ';' expression . ';' assignment_expression ')' statement

    OR_OP  shift, and go to state 104
    ';'    shift, and go to state 155


State 153

   60 postfix_expression: IDENTIFIER '(' expression_list ')' .

    $default  reduce using rule 60 (postfix_expression)


State 154

   75 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement              go to state 156
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53


State 155

   77 iteration_statement: FOR '(' assignment_expression ';' expression ';' . assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 70
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41

    assignment_expression  go to state 157
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51


State 156

   75 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 75 (selection_statement)


State 157

   77 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression . ')' statement

    ')'  shift, and go to state 158


State 158

   77 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' . statement

    IDENTIFIER      shift, and go to state 27
    INT_CONSTANT    shift, and go to state 28
    FLOAT_CONSTANT  shift, and go to state 29
    STRING_LITERAL  shift, and go to state 30
    IF              shift, and go to state 31
    WHILE           shift, and go to state 32
    FOR             shift, and go to state 33
    RETURN          shift, and go to state 34
    '-'             shift, and go to state 35
    '*'             shift, and go to state 36
    '('             shift, and go to state 37
    '{'             shift, and go to state 38
    '!'             shift, and go to state 40
    '&'             shift, and go to state 41
    ';'             shift, and go to state 42

    statement              go to state 159
    assignment_expression  go to state 45
    assignment_statement   go to state 46
    procedure_call         go to state 47
    unary_expression       go to state 48
    postfix_expression     go to state 49
    primary_expression     go to state 50
    unary_operator         go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53


State 159

   77 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement .

    $default  reduce using rule 77 (iteration_statement)
