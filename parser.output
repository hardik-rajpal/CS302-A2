Terminals unused in grammar

    OTHERS
    '\n'


Grammar

    0 $accept: begin_nterm $end

    1 begin_nterm: translation_unit

    2 translation_unit: struct_specifier
    3                 | function_definition
    4                 | translation_unit struct_specifier
    5                 | translation_unit function_definition

    6 struct_specifier: STRUCT IDENTIFIER '{' declaration_list '}' ';'

    7 function_definition: type_specifier fun_declarator compound_statement

    8 type_specifier: VOID
    9               | INT
   10               | FLOAT
   11               | STRUCT IDENTIFIER

   12 fun_declarator: IDENTIFIER '(' parameter_list ')'
   13               | IDENTIFIER '(' ')'

   14 parameter_list: parameter_declaration
   15               | parameter_list ',' parameter_declaration

   16 parameter_declaration: type_specifier declarator

   17 declarator_arr: IDENTIFIER
   18               | declarator_arr '[' INT_CONSTANT ']'

   19 declarator: declarator_arr
   20           | '*' declarator

   21 compound_statement: '{' '}'
   22                   | '{' statement_list '}'
   23                   | '{' declaration_list '}'
   24                   | '{' declaration_list statement_list '}'

   25 statement_list: statement
   26               | statement_list statement

   27 statement: ';'
   28          | '{' statement_list '}'
   29          | selection_statement
   30          | iteration_statement
   31          | assignment_statement
   32          | procedure_call
   33          | RETURN expression ';'

   34 assignment_expression: unary_expression '=' expression

   35 assignment_statement: assignment_expression ';'

   36 procedure_call: IDENTIFIER '(' ')' ';'
   37               | IDENTIFIER '(' expression_list ')' ';'

   38 expression: logical_and_expression
   39           | expression OR_OP logical_and_expression

   40 logical_and_expression: equality_expression
   41                       | logical_and_expression AND_OP equality_expression

   42 equality_expression: relational_expression
   43                    | equality_expression EQ_OP relational_expression
   44                    | equality_expression NE_OP relational_expression

   45 relational_expression: additive_expression
   46                      | relational_expression '<' additive_expression
   47                      | relational_expression '>' additive_expression
   48                      | relational_expression LE_OP additive_expression
   49                      | relational_expression GE_OP additive_expression

   50 additive_expression: multiplicative_expression
   51                    | additive_expression '+' multiplicative_expression
   52                    | additive_expression '-' multiplicative_expression

   53 unary_expression: postfix_expression
   54                 | unary_operator unary_expression

   55 multiplicative_expression: unary_expression
   56                          | multiplicative_expression '*' unary_expression
   57                          | multiplicative_expression '/' unary_expression

   58 postfix_expression: primary_expression
   59                   | postfix_expression '[' expression ']'
   60                   | IDENTIFIER '(' ')'
   61                   | IDENTIFIER '(' expression_list ')'
   62                   | postfix_expression '.' IDENTIFIER
   63                   | postfix_expression PTR_OP IDENTIFIER
   64                   | postfix_expression INC_OP

   65 primary_expression: IDENTIFIER
   66                   | INT_CONSTANT
   67                   | FLOAT_CONSTANT
   68                   | STRING_LITERAL
   69                   | '(' expression ')'

   70 expression_list: expression
   71                | expression_list ',' expression

   72 unary_operator: '-'
   73               | '!'
   74               | '&'
   75               | '*'

   76 selection_statement: IF '(' expression ')' statement ELSE statement

   77 iteration_statement: WHILE '(' expression ')' statement
   78                    | FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement

   79 declaration_list: declaration
   80                 | declaration_list declaration

   81 declaration: type_specifier declarator_list ';'

   82 declarator_list: declarator
   83                | declarator_list ',' declarator


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10)
    '!' (33) 73
    '&' (38) 74
    '(' (40) 12 13 36 37 60 61 69 76 77 78
    ')' (41) 12 13 36 37 60 61 69 76 77 78
    '*' (42) 20 56 75
    '+' (43) 51
    ',' (44) 15 71 83
    '-' (45) 52 72
    '.' (46) 62
    '/' (47) 57
    ';' (59) 6 27 33 35 36 37 78 81
    '<' (60) 46
    '=' (61) 34
    '>' (62) 47
    '[' (91) 18 59
    ']' (93) 18 59
    '{' (123) 6 21 22 23 24 28
    '}' (125) 6 21 22 23 24 28
    error (256)
    VOID <std::string> (258) 8
    INT <std::string> (259) 9
    FLOAT <std::string> (260) 10
    STRUCT <std::string> (261) 6 11
    IDENTIFIER <std::string> (262) 6 11 12 13 17 36 37 60 61 62 63 65
    INT_CONSTANT <std::string> (263) 18 66
    FLOAT_CONSTANT <std::string> (264) 67
    STRING_LITERAL <std::string> (265) 68
    OR_OP <std::string> (266) 39
    AND_OP <std::string> (267) 41
    EQ_OP <std::string> (268) 43
    NE_OP <std::string> (269) 44
    LE_OP <std::string> (270) 48
    GE_OP <std::string> (271) 49
    INC_OP <std::string> (272) 64
    PTR_OP <std::string> (273) 63
    IF <std::string> (274) 76
    ELSE <std::string> (275) 76
    WHILE <std::string> (276) 77
    FOR <std::string> (277) 78
    RETURN <std::string> (278) 33
    OTHERS <std::string> (279)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    begin_nterm <abstract_astnode*> (45)
        on left: 1
        on right: 0
    translation_unit <abstract_astnode*> (46)
        on left: 2 3 4 5
        on right: 1 4 5
    struct_specifier <abstract_astnode*> (47)
        on left: 6
        on right: 2 4
    function_definition <abstract_astnode*> (48)
        on left: 7
        on right: 3 5
    fun_declarator <abstract_astnode*> (49)
        on left: 12 13
        on right: 7
    parameter_list <abstract_astnode*> (50)
        on left: 14 15
        on right: 12 15
    parameter_declaration <abstract_astnode*> (51)
        on left: 16
        on right: 14 15
    declarator_arr <abstract_astnode*> (52)
        on left: 17 18
        on right: 18 19
    declarator <abstract_astnode*> (53)
        on left: 19 20
        on right: 16 20 82 83
    compound_statement <abstract_astnode*> (54)
        on left: 21 22 23 24
        on right: 7
    statement_list <abstract_astnode*> (55)
        on left: 25 26
        on right: 22 24 26 28
    statement <abstract_astnode*> (56)
        on left: 27 28 29 30 31 32 33
        on right: 25 26 76 77 78
    assignment_expression <abstract_astnode*> (57)
        on left: 34
        on right: 35 78
    assignment_statement <abstract_astnode*> (58)
        on left: 35
        on right: 31
    procedure_call <abstract_astnode*> (59)
        on left: 36 37
        on right: 32
    expression <abstract_astnode*> (60)
        on left: 38 39
        on right: 33 34 39 59 69 70 71 76 77 78
    logical_and_expression <abstract_astnode*> (61)
        on left: 40 41
        on right: 38 39 41
    equality_expression <abstract_astnode*> (62)
        on left: 42 43 44
        on right: 40 41 43 44
    relational_expression <abstract_astnode*> (63)
        on left: 45 46 47 48 49
        on right: 42 43 44 46 47 48 49
    additive_expression <abstract_astnode*> (64)
        on left: 50 51 52
        on right: 45 46 47 48 49 51 52
    unary_expression <abstract_astnode*> (65)
        on left: 53 54
        on right: 34 54 55 56 57
    multiplicative_expression <abstract_astnode*> (66)
        on left: 55 56 57
        on right: 50 51 52 56 57
    postfix_expression <abstract_astnode*> (67)
        on left: 58 59 60 61 62 63 64
        on right: 53 59 62 63 64
    primary_expression <abstract_astnode*> (68)
        on left: 65 66 67 68 69
        on right: 58
    expression_list <abstract_astnode*> (69)
        on left: 70 71
        on right: 37 61 71
    selection_statement <abstract_astnode*> (70)
        on left: 76
        on right: 29
    iteration_statement <abstract_astnode*> (71)
        on left: 77 78
        on right: 30
    declaration_list <abstract_astnode*> (72)
        on left: 79 80
        on right: 6 23 24 80
    declaration <abstract_astnode*> (73)
        on left: 81
        on right: 79 80
    declarator_list <abstract_astnode*> (74)
        on left: 82 83
        on right: 81 83
    type_specifier <std::string> (75)
        on left: 8 9 10 11
        on right: 7 16 81
    unary_operator <std::string> (76)
        on left: 72 73 74 75
        on right: 54


State 0

    0 $accept: . begin_nterm $end

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    begin_nterm          go to state 5
    translation_unit     go to state 6
    struct_specifier     go to state 7
    function_definition  go to state 8
    type_specifier       go to state 9


State 1

    8 type_specifier: VOID .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: INT .

    $default  reduce using rule 9 (type_specifier)


State 3

   10 type_specifier: FLOAT .

    $default  reduce using rule 10 (type_specifier)


State 4

    6 struct_specifier: STRUCT . IDENTIFIER '{' declaration_list '}' ';'
   11 type_specifier: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 10


State 5

    0 $accept: begin_nterm . $end

    $end  shift, and go to state 11


State 6

    1 begin_nterm: translation_unit .
    4 translation_unit: translation_unit . struct_specifier
    5                 | translation_unit . function_definition

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    $default  reduce using rule 1 (begin_nterm)

    struct_specifier     go to state 12
    function_definition  go to state 13
    type_specifier       go to state 9


State 7

    2 translation_unit: struct_specifier .

    $default  reduce using rule 2 (translation_unit)


State 8

    3 translation_unit: function_definition .

    $default  reduce using rule 3 (translation_unit)


State 9

    7 function_definition: type_specifier . fun_declarator compound_statement

    IDENTIFIER  shift, and go to state 14

    fun_declarator  go to state 15


State 10

    6 struct_specifier: STRUCT IDENTIFIER . '{' declaration_list '}' ';'
   11 type_specifier: STRUCT IDENTIFIER .

    '{'  shift, and go to state 16

    $default  reduce using rule 11 (type_specifier)


State 11

    0 $accept: begin_nterm $end .

    $default  accept


State 12

    4 translation_unit: translation_unit struct_specifier .

    $default  reduce using rule 4 (translation_unit)


State 13

    5 translation_unit: translation_unit function_definition .

    $default  reduce using rule 5 (translation_unit)


State 14

   12 fun_declarator: IDENTIFIER . '(' parameter_list ')'
   13               | IDENTIFIER . '(' ')'

    '('  shift, and go to state 17


State 15

    7 function_definition: type_specifier fun_declarator . compound_statement

    '{'  shift, and go to state 18

    compound_statement  go to state 19


State 16

    6 struct_specifier: STRUCT IDENTIFIER '{' . declaration_list '}' ';'

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 20

    declaration_list  go to state 21
    declaration       go to state 22
    type_specifier    go to state 23


State 17

   12 fun_declarator: IDENTIFIER '(' . parameter_list ')'
   13               | IDENTIFIER '(' . ')'

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 20
    ')'     shift, and go to state 24

    parameter_list         go to state 25
    parameter_declaration  go to state 26
    type_specifier         go to state 27


State 18

   21 compound_statement: '{' . '}'
   22                   | '{' . statement_list '}'
   23                   | '{' . declaration_list '}'
   24                   | '{' . declaration_list statement_list '}'

    VOID            shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    STRUCT          shift, and go to state 20
    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '}'             shift, and go to state 40
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement_list         go to state 44
    statement              go to state 45
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    declaration_list       go to state 54
    declaration            go to state 22
    type_specifier         go to state 23
    unary_operator         go to state 55


State 19

    7 function_definition: type_specifier fun_declarator compound_statement .

    $default  reduce using rule 7 (function_definition)


State 20

   11 type_specifier: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 56


State 21

    6 struct_specifier: STRUCT IDENTIFIER '{' declaration_list . '}' ';'
   80 declaration_list: declaration_list . declaration

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 20
    '}'     shift, and go to state 57

    declaration     go to state 58
    type_specifier  go to state 23


State 22

   79 declaration_list: declaration .

    $default  reduce using rule 79 (declaration_list)


State 23

   81 declaration: type_specifier . declarator_list ';'

    IDENTIFIER  shift, and go to state 59
    '*'         shift, and go to state 60

    declarator_arr   go to state 61
    declarator       go to state 62
    declarator_list  go to state 63


State 24

   13 fun_declarator: IDENTIFIER '(' ')' .

    $default  reduce using rule 13 (fun_declarator)


State 25

   12 fun_declarator: IDENTIFIER '(' parameter_list . ')'
   15 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 64
    ','  shift, and go to state 65


State 26

   14 parameter_list: parameter_declaration .

    $default  reduce using rule 14 (parameter_list)


State 27

   16 parameter_declaration: type_specifier . declarator

    IDENTIFIER  shift, and go to state 59
    '*'         shift, and go to state 60

    declarator_arr  go to state 61
    declarator      go to state 66


State 28

   36 procedure_call: IDENTIFIER . '(' ')' ';'
   37               | IDENTIFIER . '(' expression_list ')' ';'
   60 postfix_expression: IDENTIFIER . '(' ')'
   61                   | IDENTIFIER . '(' expression_list ')'
   65 primary_expression: IDENTIFIER .

    '('  shift, and go to state 67

    $default  reduce using rule 65 (primary_expression)


State 29

   66 primary_expression: INT_CONSTANT .

    $default  reduce using rule 66 (primary_expression)


State 30

   67 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 67 (primary_expression)


State 31

   68 primary_expression: STRING_LITERAL .

    $default  reduce using rule 68 (primary_expression)


State 32

   76 selection_statement: IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 68


State 33

   77 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 69


State 34

   78 iteration_statement: FOR . '(' assignment_expression ';' expression ';' assignment_expression ')' statement

    '('  shift, and go to state 70


State 35

   33 statement: RETURN . expression ';'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 72
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 36

   72 unary_operator: '-' .

    $default  reduce using rule 72 (unary_operator)


State 37

   75 unary_operator: '*' .

    $default  reduce using rule 75 (unary_operator)


State 38

   69 primary_expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 79
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 39

   28 statement: '{' . statement_list '}'

    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement_list         go to state 80
    statement              go to state 45
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    unary_operator         go to state 55


State 40

   21 compound_statement: '{' '}' .

    $default  reduce using rule 21 (compound_statement)


State 41

   73 unary_operator: '!' .

    $default  reduce using rule 73 (unary_operator)


State 42

   74 unary_operator: '&' .

    $default  reduce using rule 74 (unary_operator)


State 43

   27 statement: ';' .

    $default  reduce using rule 27 (statement)


State 44

   22 compound_statement: '{' statement_list . '}'
   26 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '}'             shift, and go to state 81
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement              go to state 82
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    unary_operator         go to state 55


State 45

   25 statement_list: statement .

    $default  reduce using rule 25 (statement_list)


State 46

   35 assignment_statement: assignment_expression . ';'

    ';'  shift, and go to state 83


State 47

   31 statement: assignment_statement .

    $default  reduce using rule 31 (statement)


State 48

   32 statement: procedure_call .

    $default  reduce using rule 32 (statement)


State 49

   34 assignment_expression: unary_expression . '=' expression

    '='  shift, and go to state 84


State 50

   53 unary_expression: postfix_expression .
   59 postfix_expression: postfix_expression . '[' expression ']'
   62                   | postfix_expression . '.' IDENTIFIER
   63                   | postfix_expression . PTR_OP IDENTIFIER
   64                   | postfix_expression . INC_OP

    INC_OP  shift, and go to state 85
    PTR_OP  shift, and go to state 86
    '['     shift, and go to state 87
    '.'     shift, and go to state 88

    $default  reduce using rule 53 (unary_expression)


State 51

   58 postfix_expression: primary_expression .

    $default  reduce using rule 58 (postfix_expression)


State 52

   29 statement: selection_statement .

    $default  reduce using rule 29 (statement)


State 53

   30 statement: iteration_statement .

    $default  reduce using rule 30 (statement)


State 54

   23 compound_statement: '{' declaration_list . '}'
   24                   | '{' declaration_list . statement_list '}'
   80 declaration_list: declaration_list . declaration

    VOID            shift, and go to state 1
    INT             shift, and go to state 2
    FLOAT           shift, and go to state 3
    STRUCT          shift, and go to state 20
    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '}'             shift, and go to state 89
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement_list         go to state 90
    statement              go to state 45
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    declaration            go to state 58
    type_specifier         go to state 23
    unary_operator         go to state 55


State 55

   54 unary_expression: unary_operator . unary_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    unary_expression    go to state 91
    postfix_expression  go to state 50
    primary_expression  go to state 51
    unary_operator      go to state 55


State 56

   11 type_specifier: STRUCT IDENTIFIER .

    $default  reduce using rule 11 (type_specifier)


State 57

    6 struct_specifier: STRUCT IDENTIFIER '{' declaration_list '}' . ';'

    ';'  shift, and go to state 92


State 58

   80 declaration_list: declaration_list declaration .

    $default  reduce using rule 80 (declaration_list)


State 59

   17 declarator_arr: IDENTIFIER .

    $default  reduce using rule 17 (declarator_arr)


State 60

   20 declarator: '*' . declarator

    IDENTIFIER  shift, and go to state 59
    '*'         shift, and go to state 60

    declarator_arr  go to state 61
    declarator      go to state 93


State 61

   18 declarator_arr: declarator_arr . '[' INT_CONSTANT ']'
   19 declarator: declarator_arr .

    '['  shift, and go to state 94

    $default  reduce using rule 19 (declarator)


State 62

   82 declarator_list: declarator .

    $default  reduce using rule 82 (declarator_list)


State 63

   81 declaration: type_specifier declarator_list . ';'
   83 declarator_list: declarator_list . ',' declarator

    ','  shift, and go to state 95
    ';'  shift, and go to state 96


State 64

   12 fun_declarator: IDENTIFIER '(' parameter_list ')' .

    $default  reduce using rule 12 (fun_declarator)


State 65

   15 parameter_list: parameter_list ',' . parameter_declaration

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 20

    parameter_declaration  go to state 97
    type_specifier         go to state 27


State 66

   16 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 16 (parameter_declaration)


State 67

   36 procedure_call: IDENTIFIER '(' . ')' ';'
   37               | IDENTIFIER '(' . expression_list ')' ';'
   60 postfix_expression: IDENTIFIER '(' . ')'
   61                   | IDENTIFIER '(' . expression_list ')'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    ')'             shift, and go to state 98
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 99
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    expression_list            go to state 100
    unary_operator             go to state 55


State 68

   76 selection_statement: IF '(' . expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 101
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 69

   77 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 102
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 70

   78 iteration_statement: FOR '(' . assignment_expression ';' expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    assignment_expression  go to state 103
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    unary_operator         go to state 55


State 71

   60 postfix_expression: IDENTIFIER . '(' ')'
   61                   | IDENTIFIER . '(' expression_list ')'
   65 primary_expression: IDENTIFIER .

    '('  shift, and go to state 104

    $default  reduce using rule 65 (primary_expression)


State 72

   33 statement: RETURN expression . ';'
   39 expression: expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 105
    ';'    shift, and go to state 106


State 73

   38 expression: logical_and_expression .
   41 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 107

    $default  reduce using rule 38 (expression)


State 74

   40 logical_and_expression: equality_expression .
   43 equality_expression: equality_expression . EQ_OP relational_expression
   44                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 108
    NE_OP  shift, and go to state 109

    $default  reduce using rule 40 (logical_and_expression)


State 75

   42 equality_expression: relational_expression .
   46 relational_expression: relational_expression . '<' additive_expression
   47                      | relational_expression . '>' additive_expression
   48                      | relational_expression . LE_OP additive_expression
   49                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 110
    GE_OP  shift, and go to state 111
    '<'    shift, and go to state 112
    '>'    shift, and go to state 113

    $default  reduce using rule 42 (equality_expression)


State 76

   45 relational_expression: additive_expression .
   51 additive_expression: additive_expression . '+' multiplicative_expression
   52                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 45 (relational_expression)


State 77

   55 multiplicative_expression: unary_expression .

    $default  reduce using rule 55 (multiplicative_expression)


State 78

   50 additive_expression: multiplicative_expression .
   56 multiplicative_expression: multiplicative_expression . '*' unary_expression
   57                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 116
    '/'  shift, and go to state 117

    $default  reduce using rule 50 (additive_expression)


State 79

   39 expression: expression . OR_OP logical_and_expression
   69 primary_expression: '(' expression . ')'

    OR_OP  shift, and go to state 105
    ')'    shift, and go to state 118


State 80

   26 statement_list: statement_list . statement
   28 statement: '{' statement_list . '}'

    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '}'             shift, and go to state 119
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement              go to state 82
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    unary_operator         go to state 55


State 81

   22 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 22 (compound_statement)


State 82

   26 statement_list: statement_list statement .

    $default  reduce using rule 26 (statement_list)


State 83

   35 assignment_statement: assignment_expression ';' .

    $default  reduce using rule 35 (assignment_statement)


State 84

   34 assignment_expression: unary_expression '=' . expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 120
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 85

   64 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 64 (postfix_expression)


State 86

   63 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 121


State 87

   59 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 122
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 88

   62 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 89

   23 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 23 (compound_statement)


State 90

   24 compound_statement: '{' declaration_list statement_list . '}'
   26 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '}'             shift, and go to state 124
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement              go to state 82
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    unary_operator         go to state 55


State 91

   54 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 54 (unary_expression)


State 92

    6 struct_specifier: STRUCT IDENTIFIER '{' declaration_list '}' ';' .

    $default  reduce using rule 6 (struct_specifier)


State 93

   20 declarator: '*' declarator .

    $default  reduce using rule 20 (declarator)


State 94

   18 declarator_arr: declarator_arr '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 125


State 95

   83 declarator_list: declarator_list ',' . declarator

    IDENTIFIER  shift, and go to state 59
    '*'         shift, and go to state 60

    declarator_arr  go to state 61
    declarator      go to state 126


State 96

   81 declaration: type_specifier declarator_list ';' .

    $default  reduce using rule 81 (declaration)


State 97

   15 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 15 (parameter_list)


State 98

   36 procedure_call: IDENTIFIER '(' ')' . ';'
   60 postfix_expression: IDENTIFIER '(' ')' .

    ';'  shift, and go to state 127

    $default  reduce using rule 60 (postfix_expression)


State 99

   39 expression: expression . OR_OP logical_and_expression
   70 expression_list: expression .

    OR_OP  shift, and go to state 105

    $default  reduce using rule 70 (expression_list)


State 100

   37 procedure_call: IDENTIFIER '(' expression_list . ')' ';'
   61 postfix_expression: IDENTIFIER '(' expression_list . ')'
   71 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 128
    ','  shift, and go to state 129


State 101

   39 expression: expression . OR_OP logical_and_expression
   76 selection_statement: IF '(' expression . ')' statement ELSE statement

    OR_OP  shift, and go to state 105
    ')'    shift, and go to state 130


State 102

   39 expression: expression . OR_OP logical_and_expression
   77 iteration_statement: WHILE '(' expression . ')' statement

    OR_OP  shift, and go to state 105
    ')'    shift, and go to state 131


State 103

   78 iteration_statement: FOR '(' assignment_expression . ';' expression ';' assignment_expression ')' statement

    ';'  shift, and go to state 132


State 104

   60 postfix_expression: IDENTIFIER '(' . ')'
   61                   | IDENTIFIER '(' . expression_list ')'

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    ')'             shift, and go to state 133
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 99
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    expression_list            go to state 134
    unary_operator             go to state 55


State 105

   39 expression: expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    logical_and_expression     go to state 135
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 106

   33 statement: RETURN expression ';' .

    $default  reduce using rule 33 (statement)


State 107

   41 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    equality_expression        go to state 136
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 108

   43 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    relational_expression      go to state 137
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 109

   44 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    relational_expression      go to state 138
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 110

   48 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    additive_expression        go to state 139
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 111

   49 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    additive_expression        go to state 140
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 112

   46 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    additive_expression        go to state 141
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 113

   47 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    additive_expression        go to state 142
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 114

   51 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    unary_expression           go to state 77
    multiplicative_expression  go to state 143
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 115

   52 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    unary_expression           go to state 77
    multiplicative_expression  go to state 144
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 116

   56 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    unary_expression    go to state 145
    postfix_expression  go to state 50
    primary_expression  go to state 51
    unary_operator      go to state 55


State 117

   57 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    unary_expression    go to state 146
    postfix_expression  go to state 50
    primary_expression  go to state 51
    unary_operator      go to state 55


State 118

   69 primary_expression: '(' expression ')' .

    $default  reduce using rule 69 (primary_expression)


State 119

   28 statement: '{' statement_list '}' .

    $default  reduce using rule 28 (statement)


State 120

   34 assignment_expression: unary_expression '=' expression .
   39 expression: expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 105

    $default  reduce using rule 34 (assignment_expression)


State 121

   63 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 63 (postfix_expression)


State 122

   39 expression: expression . OR_OP logical_and_expression
   59 postfix_expression: postfix_expression '[' expression . ']'

    OR_OP  shift, and go to state 105
    ']'    shift, and go to state 147


State 123

   62 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 62 (postfix_expression)


State 124

   24 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 24 (compound_statement)


State 125

   18 declarator_arr: declarator_arr '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 148


State 126

   83 declarator_list: declarator_list ',' declarator .

    $default  reduce using rule 83 (declarator_list)


State 127

   36 procedure_call: IDENTIFIER '(' ')' ';' .

    $default  reduce using rule 36 (procedure_call)


State 128

   37 procedure_call: IDENTIFIER '(' expression_list ')' . ';'
   61 postfix_expression: IDENTIFIER '(' expression_list ')' .

    ';'  shift, and go to state 149

    $default  reduce using rule 61 (postfix_expression)


State 129

   71 expression_list: expression_list ',' . expression

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 150
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 130

   76 selection_statement: IF '(' expression ')' . statement ELSE statement

    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement              go to state 151
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    unary_operator         go to state 55


State 131

   77 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement              go to state 152
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    unary_operator         go to state 55


State 132

   78 iteration_statement: FOR '(' assignment_expression ';' . expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    expression                 go to state 153
    logical_and_expression     go to state 73
    equality_expression        go to state 74
    relational_expression      go to state 75
    additive_expression        go to state 76
    unary_expression           go to state 77
    multiplicative_expression  go to state 78
    postfix_expression         go to state 50
    primary_expression         go to state 51
    unary_operator             go to state 55


State 133

   60 postfix_expression: IDENTIFIER '(' ')' .

    $default  reduce using rule 60 (postfix_expression)


State 134

   61 postfix_expression: IDENTIFIER '(' expression_list . ')'
   71 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 154
    ','  shift, and go to state 129


State 135

   39 expression: expression OR_OP logical_and_expression .
   41 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 107

    $default  reduce using rule 39 (expression)


State 136

   41 logical_and_expression: logical_and_expression AND_OP equality_expression .
   43 equality_expression: equality_expression . EQ_OP relational_expression
   44                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 108
    NE_OP  shift, and go to state 109

    $default  reduce using rule 41 (logical_and_expression)


State 137

   43 equality_expression: equality_expression EQ_OP relational_expression .
   46 relational_expression: relational_expression . '<' additive_expression
   47                      | relational_expression . '>' additive_expression
   48                      | relational_expression . LE_OP additive_expression
   49                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 110
    GE_OP  shift, and go to state 111
    '<'    shift, and go to state 112
    '>'    shift, and go to state 113

    $default  reduce using rule 43 (equality_expression)


State 138

   44 equality_expression: equality_expression NE_OP relational_expression .
   46 relational_expression: relational_expression . '<' additive_expression
   47                      | relational_expression . '>' additive_expression
   48                      | relational_expression . LE_OP additive_expression
   49                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 110
    GE_OP  shift, and go to state 111
    '<'    shift, and go to state 112
    '>'    shift, and go to state 113

    $default  reduce using rule 44 (equality_expression)


State 139

   48 relational_expression: relational_expression LE_OP additive_expression .
   51 additive_expression: additive_expression . '+' multiplicative_expression
   52                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 48 (relational_expression)


State 140

   49 relational_expression: relational_expression GE_OP additive_expression .
   51 additive_expression: additive_expression . '+' multiplicative_expression
   52                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 49 (relational_expression)


State 141

   46 relational_expression: relational_expression '<' additive_expression .
   51 additive_expression: additive_expression . '+' multiplicative_expression
   52                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 46 (relational_expression)


State 142

   47 relational_expression: relational_expression '>' additive_expression .
   51 additive_expression: additive_expression . '+' multiplicative_expression
   52                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 47 (relational_expression)


State 143

   51 additive_expression: additive_expression '+' multiplicative_expression .
   56 multiplicative_expression: multiplicative_expression . '*' unary_expression
   57                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 116
    '/'  shift, and go to state 117

    $default  reduce using rule 51 (additive_expression)


State 144

   52 additive_expression: additive_expression '-' multiplicative_expression .
   56 multiplicative_expression: multiplicative_expression . '*' unary_expression
   57                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 116
    '/'  shift, and go to state 117

    $default  reduce using rule 52 (additive_expression)


State 145

   56 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 56 (multiplicative_expression)


State 146

   57 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 57 (multiplicative_expression)


State 147

   59 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 59 (postfix_expression)


State 148

   18 declarator_arr: declarator_arr '[' INT_CONSTANT ']' .

    $default  reduce using rule 18 (declarator_arr)


State 149

   37 procedure_call: IDENTIFIER '(' expression_list ')' ';' .

    $default  reduce using rule 37 (procedure_call)


State 150

   39 expression: expression . OR_OP logical_and_expression
   71 expression_list: expression_list ',' expression .

    OR_OP  shift, and go to state 105

    $default  reduce using rule 71 (expression_list)


State 151

   76 selection_statement: IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 155


State 152

   77 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 77 (iteration_statement)


State 153

   39 expression: expression . OR_OP logical_and_expression
   78 iteration_statement: FOR '(' assignment_expression ';' expression . ';' assignment_expression ')' statement

    OR_OP  shift, and go to state 105
    ';'    shift, and go to state 156


State 154

   61 postfix_expression: IDENTIFIER '(' expression_list ')' .

    $default  reduce using rule 61 (postfix_expression)


State 155

   76 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement              go to state 157
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    unary_operator         go to state 55


State 156

   78 iteration_statement: FOR '(' assignment_expression ';' expression ';' . assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 71
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42

    assignment_expression  go to state 158
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    unary_operator         go to state 55


State 157

   76 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 76 (selection_statement)


State 158

   78 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression . ')' statement

    ')'  shift, and go to state 159


State 159

   78 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' . statement

    IDENTIFIER      shift, and go to state 28
    INT_CONSTANT    shift, and go to state 29
    FLOAT_CONSTANT  shift, and go to state 30
    STRING_LITERAL  shift, and go to state 31
    IF              shift, and go to state 32
    WHILE           shift, and go to state 33
    FOR             shift, and go to state 34
    RETURN          shift, and go to state 35
    '-'             shift, and go to state 36
    '*'             shift, and go to state 37
    '('             shift, and go to state 38
    '{'             shift, and go to state 39
    '!'             shift, and go to state 41
    '&'             shift, and go to state 42
    ';'             shift, and go to state 43

    statement              go to state 160
    assignment_expression  go to state 46
    assignment_statement   go to state 47
    procedure_call         go to state 48
    unary_expression       go to state 49
    postfix_expression     go to state 50
    primary_expression     go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    unary_operator         go to state 55


State 160

   78 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement .

    $default  reduce using rule 78 (iteration_statement)
