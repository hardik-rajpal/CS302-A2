Terminals unused in grammar

    OTHERS
    '\n'


Grammar

    0 $accept: begin_nterm $end

    1 $@1: %empty

    2 begin_nterm: $@1 translation_unit

    3 translation_unit: struct_specifier
    4                 | function_definition
    5                 | translation_unit struct_specifier
    6                 | translation_unit function_definition

    7 struct_specifier: STRUCT IDENTIFIER '{' declaration_list '}' ';'

    8 function_definition: type_specifier fun_declarator compound_statement

    9 type_specifier: VOID
   10               | INT
   11               | FLOAT
   12               | STRUCT IDENTIFIER

   13 fun_declarator: IDENTIFIER '(' parameter_list ')'
   14               | IDENTIFIER '(' ')'

   15 parameter_list: parameter_declaration
   16               | parameter_list ',' parameter_declaration

   17 parameter_declaration: type_specifier declarator

   18 declarator_arr: IDENTIFIER
   19               | declarator_arr '[' INT_CONSTANT ']'

   20 declarator: declarator_arr
   21           | '*' declarator

   22 compound_statement: '{' '}'
   23                   | '{' statement_list '}'
   24                   | '{' declaration_list '}'
   25                   | '{' declaration_list statement_list '}'

   26 statement_list: statement
   27               | statement_list statement

   28 statement: ';'
   29          | '{' statement_list '}'
   30          | selection_statement
   31          | iteration_statement
   32          | assignment_statement
   33          | procedure_call
   34          | RETURN expression ';'

   35 assignment_expression: unary_expression '=' expression

   36 assignment_statement: assignment_expression ';'

   37 procedure_call: IDENTIFIER '(' ')' ';'
   38               | IDENTIFIER '(' expression_list ')' ';'

   39 expression: logical_and_expression
   40           | expression OR_OP logical_and_expression

   41 logical_and_expression: equality_expression
   42                       | logical_and_expression AND_OP equality_expression

   43 equality_expression: relational_expression
   44                    | equality_expression EQ_OP relational_expression
   45                    | equality_expression NE_OP relational_expression

   46 relational_expression: additive_expression
   47                      | relational_expression '<' additive_expression
   48                      | relational_expression '>' additive_expression
   49                      | relational_expression LE_OP additive_expression
   50                      | relational_expression GE_OP additive_expression

   51 additive_expression: multiplicative_expression
   52                    | additive_expression '+' multiplicative_expression
   53                    | additive_expression '-' multiplicative_expression

   54 unary_expression: postfix_expression
   55                 | unary_operator unary_expression

   56 multiplicative_expression: unary_expression
   57                          | multiplicative_expression '*' unary_expression
   58                          | multiplicative_expression '/' unary_expression

   59 postfix_expression: primary_expression
   60                   | postfix_expression '[' expression ']'
   61                   | IDENTIFIER '(' ')'
   62                   | IDENTIFIER '(' expression_list ')'
   63                   | postfix_expression '.' IDENTIFIER
   64                   | postfix_expression PTR_OP IDENTIFIER
   65                   | postfix_expression INC_OP

   66 primary_expression: IDENTIFIER
   67                   | INT_CONSTANT
   68                   | FLOAT_CONSTANT
   69                   | STRING_LITERAL
   70                   | '(' expression ')'

   71 expression_list: expression
   72                | expression_list ',' expression

   73 unary_operator: '-'
   74               | '!'
   75               | '&'
   76               | '*'

   77 selection_statement: IF '(' expression ')' statement ELSE statement

   78 iteration_statement: WHILE '(' expression ')' statement
   79                    | FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement

   80 declaration_list: declaration
   81                 | declaration_list declaration

   82 declaration: type_specifier declarator_list ';'

   83 declarator_list: declarator
   84                | declarator_list ',' declarator


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10)
    '!' (33) 74
    '&' (38) 75
    '(' (40) 13 14 37 38 61 62 70 77 78 79
    ')' (41) 13 14 37 38 61 62 70 77 78 79
    '*' (42) 21 57 76
    '+' (43) 52
    ',' (44) 16 72 84
    '-' (45) 53 73
    '.' (46) 63
    '/' (47) 58
    ';' (59) 7 28 34 36 37 38 79 82
    '<' (60) 47
    '=' (61) 35
    '>' (62) 48
    '[' (91) 19 60
    ']' (93) 19 60
    '{' (123) 7 22 23 24 25 29
    '}' (125) 7 22 23 24 25 29
    error (256)
    VOID <std::string> (258) 9
    INT <std::string> (259) 10
    FLOAT <std::string> (260) 11
    STRUCT <std::string> (261) 7 12
    IDENTIFIER <std::string> (262) 7 12 13 14 18 37 38 61 62 63 64 66
    INT_CONSTANT <std::string> (263) 19 67
    FLOAT_CONSTANT <std::string> (264) 68
    STRING_LITERAL <std::string> (265) 69
    OR_OP <std::string> (266) 40
    AND_OP <std::string> (267) 42
    EQ_OP <std::string> (268) 44
    NE_OP <std::string> (269) 45
    LE_OP <std::string> (270) 49
    GE_OP <std::string> (271) 50
    INC_OP <std::string> (272) 65
    PTR_OP <std::string> (273) 64
    IF <std::string> (274) 77
    ELSE <std::string> (275) 77
    WHILE <std::string> (276) 78
    FOR <std::string> (277) 79
    RETURN <std::string> (278) 34
    OTHERS <std::string> (279)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    begin_nterm <abstract_astnode*> (45)
        on left: 2
        on right: 0
    translation_unit <abstract_astnode*> (46)
        on left: 3 4 5 6
        on right: 2 5 6
    struct_specifier <abstract_astnode*> (47)
        on left: 7
        on right: 3 5
    fun_declarator <abstract_astnode*> (48)
        on left: 13 14
        on right: 8
    parameter_list <abstract_astnode*> (49)
        on left: 15 16
        on right: 13 16
    parameter_declaration <abstract_astnode*> (50)
        on left: 17
        on right: 15 16
    declarator_arr <abstract_astnode*> (51)
        on left: 18 19
        on right: 19 20
    declarator <abstract_astnode*> (52)
        on left: 20 21
        on right: 17 21 83 84
    procedure_call <abstract_astnode*> (53)
        on left: 37 38
        on right: 33
    declaration_list <abstract_astnode*> (54)
        on left: 80 81
        on right: 7 24 25 81
    declaration <abstract_astnode*> (55)
        on left: 82
        on right: 80 81
    declarator_list <abstract_astnode*> (56)
        on left: 83 84
        on right: 82 84
    expression <exp_astnode*> (57)
        on left: 39 40
        on right: 34 35 40 60 70 71 72 77 78 79
    logical_and_expression <exp_astnode*> (58)
        on left: 41 42
        on right: 39 40 42
    equality_expression <exp_astnode*> (59)
        on left: 43 44 45
        on right: 41 42 44 45
    relational_expression <exp_astnode*> (60)
        on left: 46 47 48 49 50
        on right: 43 44 45 47 48 49 50
    additive_expression <exp_astnode*> (61)
        on left: 51 52 53
        on right: 46 47 48 49 50 52 53
    unary_expression <exp_astnode*> (62)
        on left: 54 55
        on right: 35 55 56 57 58
    multiplicative_expression <exp_astnode*> (63)
        on left: 56 57 58
        on right: 51 52 53 57 58
    postfix_expression <exp_astnode*> (64)
        on left: 59 60 61 62 63 64 65
        on right: 54 60 63 64 65
    primary_expression <exp_astnode*> (65)
        on left: 66 67 68 69 70
        on right: 59
    expression_list <exp_astnode*> (66)
        on left: 71 72
        on right: 38 62 72
    assignment_expression <assignE_astnode*> (67)
        on left: 35
        on right: 36 79
    function_definition <statement_astnode*> (68)
        on left: 8
        on right: 4 6
    statement <statement_astnode*> (69)
        on left: 28 29 30 31 32 33 34
        on right: 26 27 77 78 79
    selection_statement <statement_astnode*> (70)
        on left: 77
        on right: 30
    iteration_statement <statement_astnode*> (71)
        on left: 78 79
        on right: 31
    assignment_statement <statement_astnode*> (72)
        on left: 36
        on right: 32
    compound_statement <std::vector<statement_astnode*>> (73)
        on left: 22 23 24 25
        on right: 8
    statement_list <std::vector<statement_astnode*>> (74)
        on left: 26 27
        on right: 23 25 27 29
    type_specifier <std::string> (75)
        on left: 9 10 11 12
        on right: 8 17 82
    unary_operator <std::string> (76)
        on left: 73 74 75 76
        on right: 55
    $@1 (77)
        on left: 1
        on right: 2


State 0

    0 $accept: . begin_nterm $end

    $default  reduce using rule 1 ($@1)

    begin_nterm  go to state 1
    $@1          go to state 2


State 1

    0 $accept: begin_nterm . $end

    $end  shift, and go to state 3


State 2

    2 begin_nterm: $@1 . translation_unit

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 7

    translation_unit     go to state 8
    struct_specifier     go to state 9
    function_definition  go to state 10
    type_specifier       go to state 11


State 3

    0 $accept: begin_nterm $end .

    $default  accept


State 4

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


State 5

   10 type_specifier: INT .

    $default  reduce using rule 10 (type_specifier)


State 6

   11 type_specifier: FLOAT .

    $default  reduce using rule 11 (type_specifier)


State 7

    7 struct_specifier: STRUCT . IDENTIFIER '{' declaration_list '}' ';'
   12 type_specifier: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 12


State 8

    2 begin_nterm: $@1 translation_unit .
    5 translation_unit: translation_unit . struct_specifier
    6                 | translation_unit . function_definition

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 7

    $default  reduce using rule 2 (begin_nterm)

    struct_specifier     go to state 13
    function_definition  go to state 14
    type_specifier       go to state 11


State 9

    3 translation_unit: struct_specifier .

    $default  reduce using rule 3 (translation_unit)


State 10

    4 translation_unit: function_definition .

    $default  reduce using rule 4 (translation_unit)


State 11

    8 function_definition: type_specifier . fun_declarator compound_statement

    IDENTIFIER  shift, and go to state 15

    fun_declarator  go to state 16


State 12

    7 struct_specifier: STRUCT IDENTIFIER . '{' declaration_list '}' ';'
   12 type_specifier: STRUCT IDENTIFIER .

    '{'  shift, and go to state 17

    $default  reduce using rule 12 (type_specifier)


State 13

    5 translation_unit: translation_unit struct_specifier .

    $default  reduce using rule 5 (translation_unit)


State 14

    6 translation_unit: translation_unit function_definition .

    $default  reduce using rule 6 (translation_unit)


State 15

   13 fun_declarator: IDENTIFIER . '(' parameter_list ')'
   14               | IDENTIFIER . '(' ')'

    '('  shift, and go to state 18


State 16

    8 function_definition: type_specifier fun_declarator . compound_statement

    '{'  shift, and go to state 19

    compound_statement  go to state 20


State 17

    7 struct_specifier: STRUCT IDENTIFIER '{' . declaration_list '}' ';'

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 21

    declaration_list  go to state 22
    declaration       go to state 23
    type_specifier    go to state 24


State 18

   13 fun_declarator: IDENTIFIER '(' . parameter_list ')'
   14               | IDENTIFIER '(' . ')'

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 21
    ')'     shift, and go to state 25

    parameter_list         go to state 26
    parameter_declaration  go to state 27
    type_specifier         go to state 28


State 19

   22 compound_statement: '{' . '}'
   23                   | '{' . statement_list '}'
   24                   | '{' . declaration_list '}'
   25                   | '{' . declaration_list statement_list '}'

    VOID            shift, and go to state 4
    INT             shift, and go to state 5
    FLOAT           shift, and go to state 6
    STRUCT          shift, and go to state 21
    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '}'             shift, and go to state 41
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    declaration_list       go to state 46
    declaration            go to state 23
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    statement_list         go to state 55
    type_specifier         go to state 24
    unary_operator         go to state 56


State 20

    8 function_definition: type_specifier fun_declarator compound_statement .

    $default  reduce using rule 8 (function_definition)


State 21

   12 type_specifier: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 22

    7 struct_specifier: STRUCT IDENTIFIER '{' declaration_list . '}' ';'
   81 declaration_list: declaration_list . declaration

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 21
    '}'     shift, and go to state 58

    declaration     go to state 59
    type_specifier  go to state 24


State 23

   80 declaration_list: declaration .

    $default  reduce using rule 80 (declaration_list)


State 24

   82 declaration: type_specifier . declarator_list ';'

    IDENTIFIER  shift, and go to state 60
    '*'         shift, and go to state 61

    declarator_arr   go to state 62
    declarator       go to state 63
    declarator_list  go to state 64


State 25

   14 fun_declarator: IDENTIFIER '(' ')' .

    $default  reduce using rule 14 (fun_declarator)


State 26

   13 fun_declarator: IDENTIFIER '(' parameter_list . ')'
   16 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 65
    ','  shift, and go to state 66


State 27

   15 parameter_list: parameter_declaration .

    $default  reduce using rule 15 (parameter_list)


State 28

   17 parameter_declaration: type_specifier . declarator

    IDENTIFIER  shift, and go to state 60
    '*'         shift, and go to state 61

    declarator_arr  go to state 62
    declarator      go to state 67


State 29

   37 procedure_call: IDENTIFIER . '(' ')' ';'
   38               | IDENTIFIER . '(' expression_list ')' ';'
   61 postfix_expression: IDENTIFIER . '(' ')'
   62                   | IDENTIFIER . '(' expression_list ')'
   66 primary_expression: IDENTIFIER .

    '('  shift, and go to state 68

    $default  reduce using rule 66 (primary_expression)


State 30

   67 primary_expression: INT_CONSTANT .

    $default  reduce using rule 67 (primary_expression)


State 31

   68 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 68 (primary_expression)


State 32

   69 primary_expression: STRING_LITERAL .

    $default  reduce using rule 69 (primary_expression)


State 33

   77 selection_statement: IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 69


State 34

   78 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 70


State 35

   79 iteration_statement: FOR . '(' assignment_expression ';' expression ';' assignment_expression ')' statement

    '('  shift, and go to state 71


State 36

   34 statement: RETURN . expression ';'

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 73
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 37

   73 unary_operator: '-' .

    $default  reduce using rule 73 (unary_operator)


State 38

   76 unary_operator: '*' .

    $default  reduce using rule 76 (unary_operator)


State 39

   70 primary_expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 80
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 40

   29 statement: '{' . statement_list '}'

    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    statement_list         go to state 81
    unary_operator         go to state 56


State 41

   22 compound_statement: '{' '}' .

    $default  reduce using rule 22 (compound_statement)


State 42

   74 unary_operator: '!' .

    $default  reduce using rule 74 (unary_operator)


State 43

   75 unary_operator: '&' .

    $default  reduce using rule 75 (unary_operator)


State 44

   28 statement: ';' .

    $default  reduce using rule 28 (statement)


State 45

   33 statement: procedure_call .

    $default  reduce using rule 33 (statement)


State 46

   24 compound_statement: '{' declaration_list . '}'
   25                   | '{' declaration_list . statement_list '}'
   81 declaration_list: declaration_list . declaration

    VOID            shift, and go to state 4
    INT             shift, and go to state 5
    FLOAT           shift, and go to state 6
    STRUCT          shift, and go to state 21
    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '}'             shift, and go to state 82
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    declaration            go to state 59
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 51
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    statement_list         go to state 83
    type_specifier         go to state 24
    unary_operator         go to state 56


State 47

   35 assignment_expression: unary_expression . '=' expression

    '='  shift, and go to state 84


State 48

   54 unary_expression: postfix_expression .
   60 postfix_expression: postfix_expression . '[' expression ']'
   63                   | postfix_expression . '.' IDENTIFIER
   64                   | postfix_expression . PTR_OP IDENTIFIER
   65                   | postfix_expression . INC_OP

    INC_OP  shift, and go to state 85
    PTR_OP  shift, and go to state 86
    '['     shift, and go to state 87
    '.'     shift, and go to state 88

    $default  reduce using rule 54 (unary_expression)


State 49

   59 postfix_expression: primary_expression .

    $default  reduce using rule 59 (postfix_expression)


State 50

   36 assignment_statement: assignment_expression . ';'

    ';'  shift, and go to state 89


State 51

   26 statement_list: statement .

    $default  reduce using rule 26 (statement_list)


State 52

   30 statement: selection_statement .

    $default  reduce using rule 30 (statement)


State 53

   31 statement: iteration_statement .

    $default  reduce using rule 31 (statement)


State 54

   32 statement: assignment_statement .

    $default  reduce using rule 32 (statement)


State 55

   23 compound_statement: '{' statement_list . '}'
   27 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '}'             shift, and go to state 90
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 91
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    unary_operator         go to state 56


State 56

   55 unary_expression: unary_operator . unary_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    unary_expression    go to state 92
    postfix_expression  go to state 48
    primary_expression  go to state 49
    unary_operator      go to state 56


State 57

   12 type_specifier: STRUCT IDENTIFIER .

    $default  reduce using rule 12 (type_specifier)


State 58

    7 struct_specifier: STRUCT IDENTIFIER '{' declaration_list '}' . ';'

    ';'  shift, and go to state 93


State 59

   81 declaration_list: declaration_list declaration .

    $default  reduce using rule 81 (declaration_list)


State 60

   18 declarator_arr: IDENTIFIER .

    $default  reduce using rule 18 (declarator_arr)


State 61

   21 declarator: '*' . declarator

    IDENTIFIER  shift, and go to state 60
    '*'         shift, and go to state 61

    declarator_arr  go to state 62
    declarator      go to state 94


State 62

   19 declarator_arr: declarator_arr . '[' INT_CONSTANT ']'
   20 declarator: declarator_arr .

    '['  shift, and go to state 95

    $default  reduce using rule 20 (declarator)


State 63

   83 declarator_list: declarator .

    $default  reduce using rule 83 (declarator_list)


State 64

   82 declaration: type_specifier declarator_list . ';'
   84 declarator_list: declarator_list . ',' declarator

    ','  shift, and go to state 96
    ';'  shift, and go to state 97


State 65

   13 fun_declarator: IDENTIFIER '(' parameter_list ')' .

    $default  reduce using rule 13 (fun_declarator)


State 66

   16 parameter_list: parameter_list ',' . parameter_declaration

    VOID    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRUCT  shift, and go to state 21

    parameter_declaration  go to state 98
    type_specifier         go to state 28


State 67

   17 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 17 (parameter_declaration)


State 68

   37 procedure_call: IDENTIFIER '(' . ')' ';'
   38               | IDENTIFIER '(' . expression_list ')' ';'
   61 postfix_expression: IDENTIFIER '(' . ')'
   62                   | IDENTIFIER '(' . expression_list ')'

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    ')'             shift, and go to state 99
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 100
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    expression_list            go to state 101
    unary_operator             go to state 56


State 69

   77 selection_statement: IF '(' . expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 102
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 70

   78 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 103
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 71

   79 iteration_statement: FOR '(' . assignment_expression ';' expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 104
    unary_operator         go to state 56


State 72

   61 postfix_expression: IDENTIFIER . '(' ')'
   62                   | IDENTIFIER . '(' expression_list ')'
   66 primary_expression: IDENTIFIER .

    '('  shift, and go to state 105

    $default  reduce using rule 66 (primary_expression)


State 73

   34 statement: RETURN expression . ';'
   40 expression: expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 106
    ';'    shift, and go to state 107


State 74

   39 expression: logical_and_expression .
   42 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 108

    $default  reduce using rule 39 (expression)


State 75

   41 logical_and_expression: equality_expression .
   44 equality_expression: equality_expression . EQ_OP relational_expression
   45                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 109
    NE_OP  shift, and go to state 110

    $default  reduce using rule 41 (logical_and_expression)


State 76

   43 equality_expression: relational_expression .
   47 relational_expression: relational_expression . '<' additive_expression
   48                      | relational_expression . '>' additive_expression
   49                      | relational_expression . LE_OP additive_expression
   50                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 111
    GE_OP  shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114

    $default  reduce using rule 43 (equality_expression)


State 77

   46 relational_expression: additive_expression .
   52 additive_expression: additive_expression . '+' multiplicative_expression
   53                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 46 (relational_expression)


State 78

   56 multiplicative_expression: unary_expression .

    $default  reduce using rule 56 (multiplicative_expression)


State 79

   51 additive_expression: multiplicative_expression .
   57 multiplicative_expression: multiplicative_expression . '*' unary_expression
   58                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 51 (additive_expression)


State 80

   40 expression: expression . OR_OP logical_and_expression
   70 primary_expression: '(' expression . ')'

    OR_OP  shift, and go to state 106
    ')'    shift, and go to state 119


State 81

   27 statement_list: statement_list . statement
   29 statement: '{' statement_list . '}'

    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '}'             shift, and go to state 120
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 91
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    unary_operator         go to state 56


State 82

   24 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 24 (compound_statement)


State 83

   25 compound_statement: '{' declaration_list statement_list . '}'
   27 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '}'             shift, and go to state 121
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 91
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    unary_operator         go to state 56


State 84

   35 assignment_expression: unary_expression '=' . expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 122
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 85

   65 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 65 (postfix_expression)


State 86

   64 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 87

   60 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 124
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 88

   63 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 125


State 89

   36 assignment_statement: assignment_expression ';' .

    $default  reduce using rule 36 (assignment_statement)


State 90

   23 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 23 (compound_statement)


State 91

   27 statement_list: statement_list statement .

    $default  reduce using rule 27 (statement_list)


State 92

   55 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 93

    7 struct_specifier: STRUCT IDENTIFIER '{' declaration_list '}' ';' .

    $default  reduce using rule 7 (struct_specifier)


State 94

   21 declarator: '*' declarator .

    $default  reduce using rule 21 (declarator)


State 95

   19 declarator_arr: declarator_arr '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 126


State 96

   84 declarator_list: declarator_list ',' . declarator

    IDENTIFIER  shift, and go to state 60
    '*'         shift, and go to state 61

    declarator_arr  go to state 62
    declarator      go to state 127


State 97

   82 declaration: type_specifier declarator_list ';' .

    $default  reduce using rule 82 (declaration)


State 98

   16 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 16 (parameter_list)


State 99

   37 procedure_call: IDENTIFIER '(' ')' . ';'
   61 postfix_expression: IDENTIFIER '(' ')' .

    ';'  shift, and go to state 128

    $default  reduce using rule 61 (postfix_expression)


State 100

   40 expression: expression . OR_OP logical_and_expression
   71 expression_list: expression .

    OR_OP  shift, and go to state 106

    $default  reduce using rule 71 (expression_list)


State 101

   38 procedure_call: IDENTIFIER '(' expression_list . ')' ';'
   62 postfix_expression: IDENTIFIER '(' expression_list . ')'
   72 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 129
    ','  shift, and go to state 130


State 102

   40 expression: expression . OR_OP logical_and_expression
   77 selection_statement: IF '(' expression . ')' statement ELSE statement

    OR_OP  shift, and go to state 106
    ')'    shift, and go to state 131


State 103

   40 expression: expression . OR_OP logical_and_expression
   78 iteration_statement: WHILE '(' expression . ')' statement

    OR_OP  shift, and go to state 106
    ')'    shift, and go to state 132


State 104

   79 iteration_statement: FOR '(' assignment_expression . ';' expression ';' assignment_expression ')' statement

    ';'  shift, and go to state 133


State 105

   61 postfix_expression: IDENTIFIER '(' . ')'
   62                   | IDENTIFIER '(' . expression_list ')'

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    ')'             shift, and go to state 134
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 100
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    expression_list            go to state 135
    unary_operator             go to state 56


State 106

   40 expression: expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    logical_and_expression     go to state 136
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 107

   34 statement: RETURN expression ';' .

    $default  reduce using rule 34 (statement)


State 108

   42 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    equality_expression        go to state 137
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 109

   44 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    relational_expression      go to state 138
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 110

   45 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    relational_expression      go to state 139
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 111

   49 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    additive_expression        go to state 140
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 112

   50 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    additive_expression        go to state 141
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 113

   47 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    additive_expression        go to state 142
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 114

   48 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    additive_expression        go to state 143
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 115

   52 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    unary_expression           go to state 78
    multiplicative_expression  go to state 144
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 116

   53 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    unary_expression           go to state 78
    multiplicative_expression  go to state 145
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 117

   57 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    unary_expression    go to state 146
    postfix_expression  go to state 48
    primary_expression  go to state 49
    unary_operator      go to state 56


State 118

   58 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    unary_expression    go to state 147
    postfix_expression  go to state 48
    primary_expression  go to state 49
    unary_operator      go to state 56


State 119

   70 primary_expression: '(' expression ')' .

    $default  reduce using rule 70 (primary_expression)


State 120

   29 statement: '{' statement_list '}' .

    $default  reduce using rule 29 (statement)


State 121

   25 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 25 (compound_statement)


State 122

   35 assignment_expression: unary_expression '=' expression .
   40 expression: expression . OR_OP logical_and_expression

    OR_OP  shift, and go to state 106

    $default  reduce using rule 35 (assignment_expression)


State 123

   64 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 64 (postfix_expression)


State 124

   40 expression: expression . OR_OP logical_and_expression
   60 postfix_expression: postfix_expression '[' expression . ']'

    OR_OP  shift, and go to state 106
    ']'    shift, and go to state 148


State 125

   63 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 63 (postfix_expression)


State 126

   19 declarator_arr: declarator_arr '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 149


State 127

   84 declarator_list: declarator_list ',' declarator .

    $default  reduce using rule 84 (declarator_list)


State 128

   37 procedure_call: IDENTIFIER '(' ')' ';' .

    $default  reduce using rule 37 (procedure_call)


State 129

   38 procedure_call: IDENTIFIER '(' expression_list ')' . ';'
   62 postfix_expression: IDENTIFIER '(' expression_list ')' .

    ';'  shift, and go to state 150

    $default  reduce using rule 62 (postfix_expression)


State 130

   72 expression_list: expression_list ',' . expression

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 151
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 131

   77 selection_statement: IF '(' expression ')' . statement ELSE statement

    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 152
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    unary_operator         go to state 56


State 132

   78 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 153
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    unary_operator         go to state 56


State 133

   79 iteration_statement: FOR '(' assignment_expression ';' . expression ';' assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    expression                 go to state 154
    logical_and_expression     go to state 74
    equality_expression        go to state 75
    relational_expression      go to state 76
    additive_expression        go to state 77
    unary_expression           go to state 78
    multiplicative_expression  go to state 79
    postfix_expression         go to state 48
    primary_expression         go to state 49
    unary_operator             go to state 56


State 134

   61 postfix_expression: IDENTIFIER '(' ')' .

    $default  reduce using rule 61 (postfix_expression)


State 135

   62 postfix_expression: IDENTIFIER '(' expression_list . ')'
   72 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 155
    ','  shift, and go to state 130


State 136

   40 expression: expression OR_OP logical_and_expression .
   42 logical_and_expression: logical_and_expression . AND_OP equality_expression

    AND_OP  shift, and go to state 108

    $default  reduce using rule 40 (expression)


State 137

   42 logical_and_expression: logical_and_expression AND_OP equality_expression .
   44 equality_expression: equality_expression . EQ_OP relational_expression
   45                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 109
    NE_OP  shift, and go to state 110

    $default  reduce using rule 42 (logical_and_expression)


State 138

   44 equality_expression: equality_expression EQ_OP relational_expression .
   47 relational_expression: relational_expression . '<' additive_expression
   48                      | relational_expression . '>' additive_expression
   49                      | relational_expression . LE_OP additive_expression
   50                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 111
    GE_OP  shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114

    $default  reduce using rule 44 (equality_expression)


State 139

   45 equality_expression: equality_expression NE_OP relational_expression .
   47 relational_expression: relational_expression . '<' additive_expression
   48                      | relational_expression . '>' additive_expression
   49                      | relational_expression . LE_OP additive_expression
   50                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 111
    GE_OP  shift, and go to state 112
    '<'    shift, and go to state 113
    '>'    shift, and go to state 114

    $default  reduce using rule 45 (equality_expression)


State 140

   49 relational_expression: relational_expression LE_OP additive_expression .
   52 additive_expression: additive_expression . '+' multiplicative_expression
   53                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 49 (relational_expression)


State 141

   50 relational_expression: relational_expression GE_OP additive_expression .
   52 additive_expression: additive_expression . '+' multiplicative_expression
   53                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 50 (relational_expression)


State 142

   47 relational_expression: relational_expression '<' additive_expression .
   52 additive_expression: additive_expression . '+' multiplicative_expression
   53                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 47 (relational_expression)


State 143

   48 relational_expression: relational_expression '>' additive_expression .
   52 additive_expression: additive_expression . '+' multiplicative_expression
   53                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 115
    '-'  shift, and go to state 116

    $default  reduce using rule 48 (relational_expression)


State 144

   52 additive_expression: additive_expression '+' multiplicative_expression .
   57 multiplicative_expression: multiplicative_expression . '*' unary_expression
   58                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 52 (additive_expression)


State 145

   53 additive_expression: additive_expression '-' multiplicative_expression .
   57 multiplicative_expression: multiplicative_expression . '*' unary_expression
   58                          | multiplicative_expression . '/' unary_expression

    '*'  shift, and go to state 117
    '/'  shift, and go to state 118

    $default  reduce using rule 53 (additive_expression)


State 146

   57 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 57 (multiplicative_expression)


State 147

   58 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 58 (multiplicative_expression)


State 148

   60 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 60 (postfix_expression)


State 149

   19 declarator_arr: declarator_arr '[' INT_CONSTANT ']' .

    $default  reduce using rule 19 (declarator_arr)


State 150

   38 procedure_call: IDENTIFIER '(' expression_list ')' ';' .

    $default  reduce using rule 38 (procedure_call)


State 151

   40 expression: expression . OR_OP logical_and_expression
   72 expression_list: expression_list ',' expression .

    OR_OP  shift, and go to state 106

    $default  reduce using rule 72 (expression_list)


State 152

   77 selection_statement: IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 156


State 153

   78 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 78 (iteration_statement)


State 154

   40 expression: expression . OR_OP logical_and_expression
   79 iteration_statement: FOR '(' assignment_expression ';' expression . ';' assignment_expression ')' statement

    OR_OP  shift, and go to state 106
    ';'    shift, and go to state 157


State 155

   62 postfix_expression: IDENTIFIER '(' expression_list ')' .

    $default  reduce using rule 62 (postfix_expression)


State 156

   77 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 158
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    unary_operator         go to state 56


State 157

   79 iteration_statement: FOR '(' assignment_expression ';' expression ';' . assignment_expression ')' statement

    IDENTIFIER      shift, and go to state 72
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43

    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 159
    unary_operator         go to state 56


State 158

   77 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 77 (selection_statement)


State 159

   79 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression . ')' statement

    ')'  shift, and go to state 160


State 160

   79 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' . statement

    IDENTIFIER      shift, and go to state 29
    INT_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT  shift, and go to state 31
    STRING_LITERAL  shift, and go to state 32
    IF              shift, and go to state 33
    WHILE           shift, and go to state 34
    FOR             shift, and go to state 35
    RETURN          shift, and go to state 36
    '-'             shift, and go to state 37
    '*'             shift, and go to state 38
    '('             shift, and go to state 39
    '{'             shift, and go to state 40
    '!'             shift, and go to state 42
    '&'             shift, and go to state 43
    ';'             shift, and go to state 44

    procedure_call         go to state 45
    unary_expression       go to state 47
    postfix_expression     go to state 48
    primary_expression     go to state 49
    assignment_expression  go to state 50
    statement              go to state 161
    selection_statement    go to state 52
    iteration_statement    go to state 53
    assignment_statement   go to state 54
    unary_operator         go to state 56


State 161

   79 iteration_statement: FOR '(' assignment_expression ';' expression ';' assignment_expression ')' statement .

    $default  reduce using rule 79 (iteration_statement)
